local NTRO = {};

-- StarterGui.MNSGUI
NTRO["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
NTRO["1"]["Name"] = [[MNSGUI]];
NTRO["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
NTRO["1"]["ResetOnSpawn"] = false;


-- StarterGui.MNSGUI.MainNitroFrame
NTRO["2"] = Instance.new("Frame", NTRO["1"]);
NTRO["2"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["2"]["Size"] = UDim2.new(0, 423, 0, 545);
NTRO["2"]["Position"] = UDim2.new(0.36443, 0, 0.10585, 0);
NTRO["2"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["2"]["Name"] = [[MainNitroFrame]];


-- StarterGui.MNSGUI.MainNitroFrame.1
NTRO["3"] = Instance.new("TextLabel", NTRO["2"]);
NTRO["3"]["BorderSizePixel"] = 0;
NTRO["3"]["TextSize"] = 12;
NTRO["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["3"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["3"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["3"]["BackgroundTransparency"] = 1;
NTRO["3"]["Size"] = UDim2.new(0.92908, 0, 0.0127, 23);
NTRO["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["3"]["Text"] = [[NITROGEN ï¸±DAHOOD VER 1.0.1]];
NTRO["3"]["Name"] = [[1]];
NTRO["3"]["Position"] = UDim2.new(0.0331, 0, -0, 0);


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder
NTRO["4"] = Instance.new("Frame", NTRO["2"]);
NTRO["4"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["4"]["Size"] = UDim2.new(0, 393, 0, 25);
NTRO["4"]["Position"] = UDim2.new(0.0331, 0, 0.05408, 0);
NTRO["4"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["4"]["Name"] = [[TabHolder]];


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.UIListLayout
NTRO["5"] = Instance.new("UIListLayout", NTRO["4"]);
NTRO["5"]["HorizontalFlex"] = Enum.UIFlexAlignment.SpaceAround;
NTRO["5"]["Padding"] = UDim.new(0, 10);
NTRO["5"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
NTRO["5"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.MainButton
NTRO["6"] = Instance.new("TextButton", NTRO["4"]);
NTRO["6"]["BorderSizePixel"] = 0;
NTRO["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["6"]["TextSize"] = 12;
NTRO["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["6"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["6"]["Size"] = UDim2.new(0, 48, 0, 25);
NTRO["6"]["BackgroundTransparency"] = 1;
NTRO["6"]["Name"] = [[MainButton]];
NTRO["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["6"]["Text"] = [[MAIN]];


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.PlayersButton
NTRO["7"] = Instance.new("TextButton", NTRO["4"]);
NTRO["7"]["BorderSizePixel"] = 0;
NTRO["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["7"]["TextSize"] = 12;
NTRO["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["7"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["7"]["Size"] = UDim2.new(0, 48, 0, 25);
NTRO["7"]["BackgroundTransparency"] = 1;
NTRO["7"]["Name"] = [[PlayersButton]];
NTRO["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["7"]["Text"] = [[TELEPORT]];
NTRO["7"]["Position"] = UDim2.new(0.21575, 0, 0, 0);


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.LocalScript
NTRO["8"] = Instance.new("LocalScript", NTRO["4"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame
NTRO["9"] = Instance.new("Frame", NTRO["2"]);
NTRO["9"]["BorderSizePixel"] = 0;
NTRO["9"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["9"]["Size"] = UDim2.new(0, 422, 0, 484);
NTRO["9"]["Position"] = UDim2.new(0, 0, 0.11096, 0);
NTRO["9"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["9"]["Name"] = [[MainFrame]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft
NTRO["a"] = Instance.new("Frame", NTRO["9"]);
NTRO["a"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
NTRO["a"]["Size"] = UDim2.new(0, 192, 0, 226);
NTRO["a"]["Position"] = UDim2.new(-0.79104, 0, 0.22629, 0);
NTRO["a"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["a"]["Name"] = [[MainTopLeft]];
NTRO["a"]["LayoutOrder"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.CamlockToggle
NTRO["b"] = Instance.new("TextButton", NTRO["a"]);
NTRO["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["b"]["TextSize"] = 14;
NTRO["b"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["b"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["b"]["Name"] = [[CamlockToggle]];
NTRO["b"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["b"]["Text"] = [[]];
NTRO["b"]["Position"] = UDim2.new(0.04348, 0, 0.13068, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.CamlockToggle.LocalScript
NTRO["c"] = Instance.new("LocalScript", NTRO["b"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.2
NTRO["d"] = Instance.new("TextLabel", NTRO["a"]);
NTRO["d"]["BorderSizePixel"] = 0;
NTRO["d"]["TextSize"] = 9;
NTRO["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["d"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["d"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["d"]["BackgroundTransparency"] = 1;
NTRO["d"]["Size"] = UDim2.new(0.16072, 0, -0.0316, 23);
NTRO["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["d"]["Text"] = [[Camlock]];
NTRO["d"]["Name"] = [[2]];
NTRO["d"]["Position"] = UDim2.new(0.41437, 0, -0.00176, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.6
NTRO["e"] = Instance.new("TextLabel", NTRO["a"]);
NTRO["e"]["BorderSizePixel"] = 0;
NTRO["e"]["TextSize"] = 9;
NTRO["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["e"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["e"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["e"]["BackgroundTransparency"] = 1;
NTRO["e"]["Size"] = UDim2.new(0.47579, 0, -0.0263, 23);
NTRO["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["e"]["Text"] = [[ENABLE CAMLOCK]];
NTRO["e"]["Name"] = [[6]];
NTRO["e"]["Position"] = UDim2.new(0.09556, 0, 0.11298, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight
NTRO["f"] = Instance.new("Frame", NTRO["9"]);
NTRO["f"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
NTRO["f"]["Size"] = UDim2.new(0, 192, 0, 226);
NTRO["f"]["Position"] = UDim2.new(0.54837, 0, -0.00103, 0);
NTRO["f"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["f"]["Name"] = [[MainTopRight]];
NTRO["f"]["LayoutOrder"] = 2;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.3
NTRO["10"] = Instance.new("TextLabel", NTRO["f"]);
NTRO["10"]["BorderSizePixel"] = 0;
NTRO["10"]["TextSize"] = 9;
NTRO["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["10"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["10"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["10"]["BackgroundTransparency"] = 1;
NTRO["10"]["Size"] = UDim2.new(0.16072, 0, -0.0316, 23);
NTRO["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["10"]["Text"] = [[VISUALS]];
NTRO["10"]["Name"] = [[3]];
NTRO["10"]["Position"] = UDim2.new(0.41549, 0, -0.00176, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.8
NTRO["11"] = Instance.new("TextLabel", NTRO["f"]);
NTRO["11"]["BorderSizePixel"] = 0;
NTRO["11"]["TextSize"] = 9;
NTRO["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["11"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["11"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["11"]["BackgroundTransparency"] = 1;
NTRO["11"]["Size"] = UDim2.new(0.24241, 0, -0.03176, 23);
NTRO["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["11"]["Text"] = [[ENABLE  BOX ESP]];
NTRO["11"]["Name"] = [[8]];
NTRO["11"]["Position"] = UDim2.new(0.24143, 0, 0.11845, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.NametagsToggle
NTRO["12"] = Instance.new("TextButton", NTRO["f"]);
NTRO["12"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["12"]["TextSize"] = 14;
NTRO["12"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["12"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["12"]["Name"] = [[NametagsToggle]];
NTRO["12"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["12"]["Text"] = [[]];
NTRO["12"]["Position"] = UDim2.new(0.04869, 0, 0.25015, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.NametagsToggle.LocalScript
NTRO["13"] = Instance.new("LocalScript", NTRO["12"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.10
NTRO["14"] = Instance.new("TextLabel", NTRO["f"]);
NTRO["14"]["BorderSizePixel"] = 0;
NTRO["14"]["TextSize"] = 9;
NTRO["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["14"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["14"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["14"]["BackgroundTransparency"] = 1;
NTRO["14"]["Size"] = UDim2.new(0.51425, 0, -0.02655, 23);
NTRO["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["14"]["Text"] = [[ENABLE NAMETAGS ESP]];
NTRO["14"]["Name"] = [[10]];
NTRO["14"]["Position"] = UDim2.new(0.1623, 0, 0.23245, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.BoxEspToggle
NTRO["15"] = Instance.new("TextButton", NTRO["f"]);
NTRO["15"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["15"]["TextSize"] = 14;
NTRO["15"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["15"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["15"]["Name"] = [[BoxEspToggle]];
NTRO["15"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["15"]["Text"] = [[]];
NTRO["15"]["Position"] = UDim2.new(0.04869, 0, 0.13068, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.BoxEspToggle.LocalScript
NTRO["16"] = Instance.new("LocalScript", NTRO["15"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.GunchamsToggle
NTRO["17"] = Instance.new("TextButton", NTRO["f"]);
NTRO["17"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["17"]["TextSize"] = 14;
NTRO["17"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["17"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["17"]["Name"] = [[GunchamsToggle]];
NTRO["17"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["17"]["Text"] = [[]];
NTRO["17"]["Position"] = UDim2.new(0.04869, 0, 0.36962, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.GunchamsToggle.LocalScript
NTRO["18"] = Instance.new("LocalScript", NTRO["17"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.12
NTRO["19"] = Instance.new("TextLabel", NTRO["f"]);
NTRO["19"]["BorderSizePixel"] = 0;
NTRO["19"]["TextSize"] = 9;
NTRO["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["19"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["19"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["19"]["BackgroundTransparency"] = 1;
NTRO["19"]["Size"] = UDim2.new(0.44553, 0, -0.02655, 23);
NTRO["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["19"]["Text"] = [[ENABLE GUNCHAMS]];
NTRO["19"]["Name"] = [[12]];
NTRO["19"]["Position"] = UDim2.new(0.15289, 0, 0.35192, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.ChatlogsToggle
NTRO["1a"] = Instance.new("TextButton", NTRO["f"]);
NTRO["1a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["1a"]["TextSize"] = 14;
NTRO["1a"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["1a"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["1a"]["Name"] = [[ChatlogsToggle]];
NTRO["1a"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["1a"]["Text"] = [[]];
NTRO["1a"]["Position"] = UDim2.new(0.04869, 0, 0.48024, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.ChatlogsToggle.LocalScript
NTRO["1b"] = Instance.new("LocalScript", NTRO["1a"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.11
NTRO["1c"] = Instance.new("TextLabel", NTRO["f"]);
NTRO["1c"]["BorderSizePixel"] = 0;
NTRO["1c"]["TextSize"] = 9;
NTRO["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["1c"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["1c"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["1c"]["BackgroundTransparency"] = 1;
NTRO["1c"]["Size"] = UDim2.new(0.44553, 0, -0.02655, 23);
NTRO["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["1c"]["Text"] = [[ENABLE CHATLOGS]];
NTRO["1c"]["Name"] = [[11]];
NTRO["1c"]["Position"] = UDim2.new(0.14768, 0, 0.46254, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight
NTRO["1d"] = Instance.new("Frame", NTRO["9"]);
NTRO["1d"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
NTRO["1d"]["Size"] = UDim2.new(0, 192, 0, 226);
NTRO["1d"]["Position"] = UDim2.new(0.54726, 0, 0.50862, 0);
NTRO["1d"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["1d"]["Name"] = [[MainBottomRight]];
NTRO["1d"]["LayoutOrder"] = 999;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.CTRLClickTP
NTRO["1e"] = Instance.new("TextButton", NTRO["1d"]);
NTRO["1e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["1e"]["TextSize"] = 14;
NTRO["1e"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["1e"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["1e"]["Name"] = [[CTRLClickTP]];
NTRO["1e"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["1e"]["Text"] = [[]];
NTRO["1e"]["Position"] = UDim2.new(0.03727, 0, 0.37701, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.CTRLClickTP.LocalScript
NTRO["1f"] = Instance.new("LocalScript", NTRO["1e"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.InfiniteJumpToggle
NTRO["20"] = Instance.new("TextButton", NTRO["1d"]);
NTRO["20"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["20"]["TextSize"] = 14;
NTRO["20"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["20"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["20"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["20"]["Name"] = [[InfiniteJumpToggle]];
NTRO["20"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["20"]["Text"] = [[]];
NTRO["20"]["Position"] = UDim2.new(0.03727, 0, 0.27082, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.InfiniteJumpToggle.LocalScript
NTRO["21"] = Instance.new("LocalScript", NTRO["20"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.SpeedToggle
NTRO["22"] = Instance.new("TextButton", NTRO["1d"]);
NTRO["22"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["22"]["TextSize"] = 14;
NTRO["22"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["22"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["22"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["22"]["Name"] = [[SpeedToggle]];
NTRO["22"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["22"]["Text"] = [[]];
NTRO["22"]["Position"] = UDim2.new(0.03727, 0, 0.15909, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.SpeedToggle.LocalScript
NTRO["23"] = Instance.new("LocalScript", NTRO["22"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.12
NTRO["24"] = Instance.new("TextLabel", NTRO["1d"]);
NTRO["24"]["BorderSizePixel"] = 0;
NTRO["24"]["TextSize"] = 9;
NTRO["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["24"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["24"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["24"]["BackgroundTransparency"] = 1;
NTRO["24"]["Size"] = UDim2.new(0.26424, 0, -0.02733, 23);
NTRO["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["24"]["Text"] = [[ENABLE SPEED]];
NTRO["24"]["Name"] = [[12]];
NTRO["24"]["Position"] = UDim2.new(0.1579, 0, 0.14243, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.12
NTRO["25"] = Instance.new("TextLabel", NTRO["1d"]);
NTRO["25"]["BorderSizePixel"] = 0;
NTRO["25"]["TextSize"] = 9;
NTRO["25"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["25"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["25"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["25"]["BackgroundTransparency"] = 1;
NTRO["25"]["Size"] = UDim2.new(0.4874, 0, -0.02655, 23);
NTRO["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["25"]["Text"] = [[ENABLE INFINITE JUMP]];
NTRO["25"]["Name"] = [[12]];
NTRO["25"]["Position"] = UDim2.new(0.14748, 0, 0.25458, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.12
NTRO["26"] = Instance.new("TextLabel", NTRO["1d"]);
NTRO["26"]["BorderSizePixel"] = 0;
NTRO["26"]["TextSize"] = 9;
NTRO["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["26"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["26"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["26"]["BackgroundTransparency"] = 1;
NTRO["26"]["Size"] = UDim2.new(0.47177, 0, -0.02655, 23);
NTRO["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["26"]["Text"] = [[ENABLE CTRL CLICK TP]];
NTRO["26"]["Name"] = [[12]];
NTRO["26"]["Position"] = UDim2.new(0.1579, 0, 0.36077, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.5
NTRO["27"] = Instance.new("TextLabel", NTRO["1d"]);
NTRO["27"]["BorderSizePixel"] = 0;
NTRO["27"]["TextSize"] = 9;
NTRO["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["27"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["27"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["27"]["BackgroundTransparency"] = 1;
NTRO["27"]["Size"] = UDim2.new(0.16072, 0, -0.02477, 23);
NTRO["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["27"]["Text"] = [[movement]];
NTRO["27"]["Name"] = [[5]];
NTRO["27"]["Position"] = UDim2.new(0.41549, 0, -0.00193, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft
NTRO["28"] = Instance.new("Frame", NTRO["9"]);
NTRO["28"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
NTRO["28"]["Size"] = UDim2.new(0, 192, 0, 226);
NTRO["28"]["Position"] = UDim2.new(0.00498, 0, 0.51078, 0);
NTRO["28"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["28"]["Name"] = [[MainBottomLeft]];
NTRO["28"]["LayoutOrder"] = 3;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.4
NTRO["29"] = Instance.new("TextLabel", NTRO["28"]);
NTRO["29"]["BorderSizePixel"] = 0;
NTRO["29"]["TextSize"] = 9;
NTRO["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["29"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["29"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["29"]["BackgroundTransparency"] = 1;
NTRO["29"]["Size"] = UDim2.new(0.16072, 0, -0.02477, 23);
NTRO["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["29"]["Text"] = [[hitbox expander]];
NTRO["29"]["Name"] = [[4]];
NTRO["29"]["Position"] = UDim2.new(0.41437, 0, -0.00193, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.HitBoxToggle
NTRO["2a"] = Instance.new("TextButton", NTRO["28"]);
NTRO["2a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["2a"]["TextSize"] = 14;
NTRO["2a"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["2a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["2a"]["Size"] = UDim2.new(0, 10, 0, 10);
NTRO["2a"]["Name"] = [[HitBoxToggle]];
NTRO["2a"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["2a"]["Text"] = [[]];
NTRO["2a"]["Position"] = UDim2.new(0.04348, 0, 0.15909, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.HitBoxToggle.LocalScript
NTRO["2b"] = Instance.new("LocalScript", NTRO["2a"]);



-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.11
NTRO["2c"] = Instance.new("TextLabel", NTRO["28"]);
NTRO["2c"]["BorderSizePixel"] = 0;
NTRO["2c"]["TextSize"] = 9;
NTRO["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["2c"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["2c"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["2c"]["BackgroundTransparency"] = 1;
NTRO["2c"]["Size"] = UDim2.new(0.48133, 0, -0.06944, 23);
NTRO["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["2c"]["Text"] = [[ENABLE HITBOX]];
NTRO["2c"]["Name"] = [[11]];
NTRO["2c"]["Position"] = UDim2.new(0.06431, 0, 0.15909, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config
NTRO["2d"] = Instance.new("CanvasGroup", NTRO["28"]);
NTRO["2d"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
NTRO["2d"]["Size"] = UDim2.new(0, 191, 0, 165);
NTRO["2d"]["Position"] = UDim2.new(0.00508, 0, 0.26677, 0);
NTRO["2d"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["2d"]["Name"] = [[config]];
NTRO["2d"]["BackgroundTransparency"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main
NTRO["2e"] = Instance.new("Frame", NTRO["2d"]);
NTRO["2e"]["BorderSizePixel"] = 0;
NTRO["2e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["2e"]["Size"] = UDim2.new(0.9207, 0, 0.96236, 0);
NTRO["2e"]["Position"] = UDim2.new(0.0386, 0, 0, 0);
NTRO["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["2e"]["Name"] = [[main]];
NTRO["2e"]["BackgroundTransparency"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.1color
NTRO["2f"] = Instance.new("TextBox", NTRO["2e"]);
NTRO["2f"]["Name"] = [[1color]];
NTRO["2f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
NTRO["2f"]["PlaceholderColor3"] = Color3.fromRGB(86, 74, 87);
NTRO["2f"]["TextSize"] = 9;
NTRO["2f"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["2f"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
NTRO["2f"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["2f"]["PlaceholderText"] = [[Enter Colour Code (HEX ONLY)]];
NTRO["2f"]["Size"] = UDim2.new(1, 0, 0, 25);
NTRO["2f"]["Position"] = UDim2.new(0, 0, 0.41571, 0);
NTRO["2f"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["2f"]["Text"] = [[]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.1color.UIPadding
NTRO["30"] = Instance.new("UIPadding", NTRO["2f"]);
NTRO["30"]["PaddingTop"] = UDim.new(0, 5);
NTRO["30"]["PaddingRight"] = UDim.new(0, 10);
NTRO["30"]["PaddingLeft"] = UDim.new(0, 10);
NTRO["30"]["PaddingBottom"] = UDim.new(0, 5);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.2ctext
NTRO["31"] = Instance.new("TextLabel", NTRO["2e"]);
NTRO["31"]["TextWrapped"] = true;
NTRO["31"]["BorderSizePixel"] = 0;
NTRO["31"]["TextSize"] = 12;
NTRO["31"]["TextXAlignment"] = Enum.TextXAlignment.Left;
NTRO["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["31"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["31"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["31"]["BackgroundTransparency"] = 1;
NTRO["31"]["Size"] = UDim2.new(1, 0, -0.01503, 23);
NTRO["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["31"]["Text"] = [[Color : DEFAULT]];
NTRO["31"]["Name"] = [[2ctext]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.3hitbox
NTRO["32"] = Instance.new("TextBox", NTRO["2e"]);
NTRO["32"]["Name"] = [[3hitbox]];
NTRO["32"]["TextXAlignment"] = Enum.TextXAlignment.Left;
NTRO["32"]["PlaceholderColor3"] = Color3.fromRGB(86, 74, 87);
NTRO["32"]["TextSize"] = 9;
NTRO["32"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["32"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
NTRO["32"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["32"]["PlaceholderText"] = [[Enter HitBox Size]];
NTRO["32"]["Size"] = UDim2.new(1, 0, 0, 25);
NTRO["32"]["Position"] = UDim2.new(0, 0, 0.65982, 0);
NTRO["32"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["32"]["Text"] = [[]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.3hitbox.UIPadding
NTRO["33"] = Instance.new("UIPadding", NTRO["32"]);
NTRO["33"]["PaddingTop"] = UDim.new(0, 5);
NTRO["33"]["PaddingRight"] = UDim.new(0, 10);
NTRO["33"]["PaddingLeft"] = UDim.new(0, 10);
NTRO["33"]["PaddingBottom"] = UDim.new(0, 5);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.4size
NTRO["34"] = Instance.new("TextLabel", NTRO["2e"]);
NTRO["34"]["TextWrapped"] = true;
NTRO["34"]["BorderSizePixel"] = 0;
NTRO["34"]["TextSize"] = 12;
NTRO["34"]["TextXAlignment"] = Enum.TextXAlignment.Left;
NTRO["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["34"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["34"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["34"]["BackgroundTransparency"] = 1;
NTRO["34"]["Size"] = UDim2.new(1, 0, -0.01503, 23);
NTRO["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["34"]["Text"] = [[Size : DEFAULT]];
NTRO["34"]["Name"] = [[4size]];


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.5save
NTRO["35"] = Instance.new("TextButton", NTRO["2e"]);
NTRO["35"]["TextColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["35"]["TextSize"] = 12;
NTRO["35"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
NTRO["35"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["35"]["Size"] = UDim2.new(1, 0, -0.0122, 24);
NTRO["35"]["Name"] = [[5save]];
NTRO["35"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["35"]["Text"] = [[SAVE]];
NTRO["35"]["Position"] = UDim2.new(-0.01137, 0, 0.84374, 0);


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.config.main.UIListLayout
NTRO["36"] = Instance.new("UIListLayout", NTRO["2e"]);
NTRO["36"]["VerticalFlex"] = Enum.UIFlexAlignment.SpaceAround;
NTRO["36"]["Padding"] = UDim.new(0, 5);
NTRO["36"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.UIListLayout
NTRO["37"] = Instance.new("UIListLayout", NTRO["9"]);
NTRO["37"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
NTRO["37"]["HorizontalFlex"] = Enum.UIFlexAlignment.SpaceEvenly;
NTRO["37"]["Wraps"] = true;
NTRO["37"]["Padding"] = UDim.new(0, 10);
NTRO["37"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
NTRO["37"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
NTRO["37"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.UIPadding
NTRO["38"] = Instance.new("UIPadding", NTRO["9"]);
NTRO["38"]["PaddingTop"] = UDim.new(0, 10);
NTRO["38"]["PaddingRight"] = UDim.new(0, 10);
NTRO["38"]["PaddingLeft"] = UDim.new(0, 10);
NTRO["38"]["PaddingBottom"] = UDim.new(0, 10);


-- StarterGui.MNSGUI.MainNitroFrame.LocalScript
NTRO["39"] = Instance.new("LocalScript", NTRO["2"]);



-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame
NTRO["3a"] = Instance.new("Frame", NTRO["2"]);
NTRO["3a"]["Visible"] = false;
NTRO["3a"]["BorderSizePixel"] = 0;
NTRO["3a"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
NTRO["3a"]["Size"] = UDim2.new(0, 422, 0, 484);
NTRO["3a"]["Position"] = UDim2.new(0, 0, 0.11096, 0);
NTRO["3a"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["3a"]["Name"] = [[PlayerlistFrame]];


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft
NTRO["3b"] = Instance.new("Frame", NTRO["3a"]);
NTRO["3b"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
NTRO["3b"]["Size"] = UDim2.new(0, 393, 0, 465);
NTRO["3b"]["Position"] = UDim2.new(0.00995, 0, -0.00108, 0);
NTRO["3b"]["BorderColor3"] = Color3.fromRGB(165, 141, 166);
NTRO["3b"]["Name"] = [[PlayerlistLeft]];
NTRO["3b"]["LayoutOrder"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.3
NTRO["3c"] = Instance.new("TextLabel", NTRO["3b"]);
NTRO["3c"]["BorderSizePixel"] = 0;
NTRO["3c"]["TextSize"] = 9;
NTRO["3c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["3c"]["FontFace"] = Font.new([[rbxassetid://12187371840]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["3c"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
NTRO["3c"]["BackgroundTransparency"] = 1;
NTRO["3c"]["Size"] = UDim2.new(0.16072, 0, -0.023, 23);
NTRO["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["3c"]["Text"] = [[LOCATIONS]];
NTRO["3c"]["Name"] = [[3]];
NTRO["3c"]["Position"] = UDim2.new(0.40916, 0, -0.00176, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame
NTRO["3d"] = Instance.new("Frame", NTRO["3b"]);
NTRO["3d"]["BorderSizePixel"] = 0;
NTRO["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["3d"]["Size"] = UDim2.new(0.93639, 0, 0, 398);
NTRO["3d"]["Position"] = UDim2.new(0.03076, 0, 0.06667, 0);
NTRO["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
NTRO["3d"]["BackgroundTransparency"] = 1;


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.park
NTRO["3e"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["3e"]["TextSize"] = 11;
NTRO["3e"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["3e"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["3e"]["Name"] = [[park]];
NTRO["3e"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["3e"]["Text"] = [[park]];
NTRO["3e"]["Position"] = UDim2.new(0.34479, 0, 0.06195, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.uphillfood
NTRO["3f"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["3f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["3f"]["TextSize"] = 10;
NTRO["3f"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["3f"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["3f"]["Name"] = [[uphillfood]];
NTRO["3f"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["3f"]["Text"] = [[up hill food]];
NTRO["3f"]["Position"] = UDim2.new(0.01875, 0, 0.23407, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.revolver
NTRO["40"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["40"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["40"]["TextSize"] = 11;
NTRO["40"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["40"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["40"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["40"]["Name"] = [[revolver]];
NTRO["40"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["40"]["Text"] = [[revolver]];
NTRO["40"]["Position"] = UDim2.new(0.67083, 0, 0.06195, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.gastation
NTRO["41"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["41"]["TextSize"] = 11;
NTRO["41"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["41"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["41"]["Name"] = [[gastation]];
NTRO["41"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["41"]["Text"] = [[gas station]];
NTRO["41"]["Position"] = UDim2.new(0.01875, 0, 0.40619, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.hoodkicks
NTRO["42"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["42"]["TextSize"] = 11;
NTRO["42"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["42"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["42"]["Name"] = [[hoodkicks]];
NTRO["42"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["42"]["Text"] = [[hood kicks]];
NTRO["42"]["Position"] = UDim2.new(0.67083, 0, 0.23407, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.uphill
NTRO["43"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["43"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["43"]["TextSize"] = 11;
NTRO["43"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["43"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["43"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["43"]["Name"] = [[uphill]];
NTRO["43"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["43"]["Text"] = [[up hill]];
NTRO["43"]["Position"] = UDim2.new(0.67083, 0, 0.40619, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.school
NTRO["44"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["44"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["44"]["TextSize"] = 11;
NTRO["44"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["44"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["44"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["44"]["Name"] = [[school]];
NTRO["44"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["44"]["Text"] = [[school]];
NTRO["44"]["Position"] = UDim2.new(0.01875, 0, 0.57832, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.hairsalon
NTRO["45"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["45"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["45"]["TextSize"] = 11;
NTRO["45"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["45"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["45"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["45"]["Name"] = [[hairsalon]];
NTRO["45"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["45"]["Text"] = [[hair salon]];
NTRO["45"]["Position"] = UDim2.new(0.34479, 0, 0.57832, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.gym
NTRO["46"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["46"]["TextSize"] = 11;
NTRO["46"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["46"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["46"]["Name"] = [[gym]];
NTRO["46"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["46"]["Text"] = [[gym]];
NTRO["46"]["Position"] = UDim2.new(0.34479, 0, 0.23407, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.mil
NTRO["47"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["47"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["47"]["TextSize"] = 11;
NTRO["47"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["47"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["47"]["Name"] = [[mil]];
NTRO["47"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["47"]["Text"] = [[military]];
NTRO["47"]["Position"] = UDim2.new(0.34479, 0, 0.40619, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.LocalScript
NTRO["48"] = Instance.new("LocalScript", NTRO["3d"]);



-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.bank
NTRO["49"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["49"]["TextSize"] = 11;
NTRO["49"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["49"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["49"]["Name"] = [[bank]];
NTRO["49"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["49"]["Text"] = [[bank]];
NTRO["49"]["Position"] = UDim2.new(0.01875, 0, 0.06195, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.downhill
NTRO["4a"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["4a"]["TextSize"] = 11;
NTRO["4a"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["4a"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["4a"]["Name"] = [[downhill]];
NTRO["4a"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["4a"]["Text"] = [[down hill]];
NTRO["4a"]["Position"] = UDim2.new(0.67083, 0, 0.57832, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.food
NTRO["4b"] = Instance.new("TextButton", NTRO["3d"]);
NTRO["4b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
NTRO["4b"]["TextSize"] = 11;
NTRO["4b"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
NTRO["4b"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
NTRO["4b"]["Size"] = UDim2.new(0, 200, 0, 50);
NTRO["4b"]["Name"] = [[food]];
NTRO["4b"]["BorderColor3"] = Color3.fromRGB(164, 140, 165);
NTRO["4b"]["Text"] = [[food]];
NTRO["4b"]["Position"] = UDim2.new(0.01875, 0, 0.75044, 0);


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.UIGridLayout
NTRO["4c"] = Instance.new("UIGridLayout", NTRO["3d"]);
NTRO["4c"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
NTRO["4c"]["CellSize"] = UDim2.new(1, 0, 0.06, 0);
NTRO["4c"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
NTRO["4c"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.UIPadding
NTRO["4d"] = Instance.new("UIPadding", NTRO["3a"]);
NTRO["4d"]["PaddingTop"] = UDim.new(0, 10);
NTRO["4d"]["PaddingRight"] = UDim.new(0, 10);
NTRO["4d"]["PaddingLeft"] = UDim.new(0, 10);
NTRO["4d"]["PaddingBottom"] = UDim.new(0, 10);


-- StarterGui.MNSGUI.MainNitroFrame.TabHolder.LocalScript
local function C_8()
local script = NTRO["8"];
	local TweenService = game:GetService("TweenService")
	local frames = script.Parent.Parent
	local tp = frames.PlayerlistFrame
	local main = frames.MainFrame
	
	tp.Visible = false
	main.Visible = true
	
	local tabHolder = script.Parent
	local playersButton = tabHolder.PlayersButton
	local mainButton = tabHolder.MainButton
	
	local defaultColor = Color3.fromRGB(255, 255, 255)
	local selectedColor = Color3.fromRGB(164, 140, 165)
	
	local function fadeButtonColor(button, targetColor)
		local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local goal = {TextColor3 = targetColor}
		local tween = TweenService:Create(button, tweenInfo, goal)
		tween:Play()
	end
	
	local function updateButtonColors(selectedButton)
		fadeButtonColor(playersButton, defaultColor)
	end
	
	mainButton.MouseButton1Click:Connect(function()
		updateButtonColors(mainButton)
		main.Visible = true
		tp.Visible = false
	end)
	
	
	playersButton.MouseButton1Click:Connect(function()
		updateButtonColors(playersButton)
		main.Visible = false
		tp.Visible = true
	end)
	
	
	
end;
task.spawn(C_8);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopLeft.CamlockToggle.LocalScript
local function C_c()
local script = NTRO["c"];
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local CurrentCamera = game:GetService("Workspace").CurrentCamera
	local UserInputService = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	
	local Aimbot = {
		Enabled = false,
		Radius = 200,
		HitPart = "Head",
		Smoothing = 1,
		Target = nil
	}
	
	local button = script.Parent
	local isToggled = false
	
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled  
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  
			Aimbot.Enabled = true
			Aimbot.Target = nil
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  
			Aimbot.Enabled = false
			Aimbot.Target = nil
		end
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
	local function IsAlive(Player)
		if Player and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 then
			return true
		end
		return false
	end
	
	local function GetClosestToMouse()
		local Closest, Part = Aimbot.Radius, nil
	
		for _, Player in Players:GetPlayers() do
			if Player ~= LocalPlayer and IsAlive(Player) then
				local HitPart = Player.Character:FindFirstChild(Aimbot.HitPart)
	
				if HitPart then
					local ScreenPosition, OnScreen = CurrentCamera:WorldToViewportPoint(HitPart.Position)
					local Distance = (UserInputService:GetMouseLocation() - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude
	
					if OnScreen and Distance <= Closest then
						Closest = Distance
						Part = HitPart
					end
				end
			end
		end
	
		return Part
	end
	
	UserInputService.InputBegan:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode == Enum.KeyCode.C then
			if Aimbot.Enabled then
				if not Aimbot.Target then
					Aimbot.Target = GetClosestToMouse()
				else
					Aimbot.Target = nil
				end
			end
		end
	end)
	
	RunService.Heartbeat:Connect(function()
		if not Aimbot.Enabled then
			return
		end
	
		if Aimbot.Target then
			CurrentCamera.CFrame = CurrentCamera.CFrame:Lerp(CFrame.new(CurrentCamera.CFrame.Position, Aimbot.Target.Position), Aimbot.Smoothing)
		end
	end)
	
end;
task.spawn(C_c);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.NametagsToggle.LocalScript
local function C_13()
local script = NTRO["13"];
	local button = script.Parent
	local Sense = loadstring(game:HttpGet('https://sirius.menu/sense'))()  -- Load the Sense ESP
	
	local isToggled = false
	
	-- Set initial button background color to dark gray
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled  -- Toggle the boolean value
	
		if isToggled then
			-- When toggled on: change button color to lavender
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  -- Button color on
	
			-- Enable the Name ESP
			Sense.teamSettings.enemy.enabled = true
			Sense.teamSettings.enemy.name = true  -- Enable name ESP
			Sense.teamSettings.enemy.nameColor = { Color3.fromRGB(255, 255, 255), 1 }  -- Set name color to white
			Sense.teamSettings.enemy.nameOutline = true  -- Enable outline for names
			Sense.teamSettings.enemy.nameOutlineColor = Color3.fromRGB(0, 0, 0)  -- Set name outline color to black
	
			print("Name ESP On, Button toggled to On")
		else
			-- When toggled off: revert button color to dark gray
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  -- Button color off
	
			-- Disable the Name ESP
			Sense.teamSettings.enemy.enabled = false
			Sense.teamSettings.enemy.name = false  -- Disable name ESP
	
			print("Name ESP Off, Button toggled to Off")
		end
	end
	
	-- Connect the toggleButton function to the button click event
	button.MouseButton1Click:Connect(toggleButton)
	
	-- Load Sense ESP initially (if you want it to work immediately)
	Sense.Load()
	
	-- You can add the unloading of Sense if needed (but it's optional)
	-- Example: Sense.Unload()
	
end;
task.spawn(C_13);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.BoxEspToggle.LocalScript
local function C_16()
local script = NTRO["16"];
	local button = script.Parent
	local Sense = loadstring(game:HttpGet('https://sirius.menu/sense'))()
	
	local isToggled = false
	
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled  
	
		if isToggled then
	
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165) 
	
			Sense.teamSettings.enemy.enabled = true
			Sense.teamSettings.enemy.box = true
			Sense.teamSettings.enemy.boxColor[1] = Color3.fromRGB(255, 255, 255)  
			Sense.teamSettings.enemy.boxFill = false  
	
	
			Sense.teamSettings.enemy.healthBar = true
			Sense.teamSettings.enemy.healthyColor = Color3.fromRGB(0, 255, 0)  
			Sense.teamSettings.enemy.dyingColor = Color3.fromRGB(255, 0, 0)  
	
			print("ESP On, Button toggled to On")
		else
	
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  
	
	
			Sense.teamSettings.enemy.enabled = false
			Sense.teamSettings.enemy.box = false
			Sense.teamSettings.enemy.healthBar = false
	
			print("ESP Off, Button toggled to Off")
		end
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
	Sense.Load()
	
	
end;
task.spawn(C_16);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.GunchamsToggle.LocalScript
local function C_18()
local script = NTRO["18"];
	local gunchamsbutton=script.Parent
	local isToggled=false
	local run=game:GetService('RunService')
	local connection
	local originalProperties={}
	gunchamsbutton.BackgroundColor3=Color3.fromRGB(31,31,31)
	if not game:IsLoaded()then game.Loaded:Wait()else print("Game loaded")end
	local function getgun()
		for i,v in pairs(game:GetService('Players').LocalPlayer.Character:GetChildren())do
			if v and v:FindFirstChild('Default')then return v end
		end
	end
	local function color(v)
		if not originalProperties[v]then
			originalProperties[v]={Color=v.Color,Material=v.Material}
		end
		v.Color=Color3.fromRGB(164,140,165)
		v.Material=Enum.Material.ForceField
	end
	local function restore(v)
		if originalProperties[v]then
			v.Color=originalProperties[v].Color
			v.Material=originalProperties[v].Material
			originalProperties[v]=nil
		end
	end
	local function togglegunchamsbutton()
		isToggled=not isToggled
		if isToggled then
			gunchamsbutton.BackgroundColor3=Color3.fromRGB(164,140,165)
			connection=run.Stepped:Connect(function()
				local gun=getgun()
				if gun then
					for i,v in pairs(gun:GetChildren())do
						if v:IsA("BasePart")then color(v)end
					end
				end
			end)
		else
			gunchamsbutton.BackgroundColor3=Color3.fromRGB(31,31,31)
			if connection then connection:Disconnect()connection=nil end
			local gun=getgun()
			if gun then
				for i,v in pairs(gun:GetChildren())do
					if v:IsA("BasePart")then restore(v)end
				end
			end
		end
	end
	gunchamsbutton.MouseButton1Click:Connect(togglegunchamsbutton)
	-- sorry nega
end;
task.spawn(C_18);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainTopRight.ChatlogsToggle.LocalScript
local function C_1b()
local script = NTRO["1b"];
	local button = script.Parent
	
	local isToggled = false
	
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  -- Set initial color to dark gray
	
	local function toggleButton()
		isToggled = not isToggled  -- Toggle the boolean value
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  -- Set color to green (or any color when toggled on)
			local ChatLogs = true
	
			if game.PlaceId == 2788229376 then
				if ChatLogs == true then
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Position = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(),game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Size.Y)
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = true
				end
	
				if ChatLogs == false then
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Position = UDim2.new(0, 0, 0, 0)
					game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = false
				end
			end
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31) 
			game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = false
		end
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
end;
task.spawn(C_1b);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.CTRLClickTP.LocalScript
local function C_1f()
local script = NTRO["1f"];
	local Plr = game:GetService("Players").LocalPlayer
	local Mouse = Plr:GetMouse()
	
	local button = script.Parent
	local isToggled = false
	
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	local function toggleButton()
		isToggled = not isToggled
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)
			print("On")
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
			print("Off")
		end
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
	Mouse.Button1Down:connect(function()
		if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then return end
		if not Mouse.Target then return end
		if not isToggled then return end
		Plr.Character:MoveTo(Mouse.Hit.p)
	end)
	
end;
task.spawn(C_1f);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.InfiniteJumpToggle.LocalScript
local function C_21()
local script = NTRO["21"];
	local Player = game:GetService("Players").LocalPlayer
	local UIS = game:GetService("UserInputService")
	local button = script.Parent
	
	local isToggled = false
	local jumpHeight = 50  -- You can adjust this value as needed
	
	-- Set the initial button color
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	-- Function to toggle the button and jump functionality
	local function toggleButton()
		isToggled = not isToggled  -- Toggle the state
	
		if isToggled then
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)  -- Active color
		else
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)  -- Inactive color
		end
	end
	
	-- Connect the button click event to the toggle function
	button.MouseButton1Click:Connect(toggleButton)
	
	-- Function to adjust the jump height based on button toggle
	UIS.InputBegan:Connect(function(UserInput)
		if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
			-- Only modify jump behavior if the button is toggled on
			if isToggled then
				-- Ensure the character and humanoid exist
				if Player.Character and Player.Character:FindFirstChild("Humanoid") then
					local humanoid = Player.Character.Humanoid
					if humanoid:GetState() == Enum.HumanoidStateType.Jumping or humanoid:GetState() == Enum.HumanoidStateType.Freefall then
						local humanoidRootPart = Player.Character:FindFirstChild("HumanoidRootPart")
						if humanoidRootPart then
							humanoidRootPart.Velocity = Vector3.new(0, jumpHeight, 0)  -- Adjust the jump velocity
						end
					end
				end
			end
		end
	end)
	
end;
task.spawn(C_21);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomRight.SpeedToggle.LocalScript
local function C_23()
local script = NTRO["23"];
	local namebutton = script.Parent
	local istoggled = false
	
	namebutton.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	
	getgenv().cframespeedtoggle = false
	KeyBind = "z"  
	getgenv().speedvalue = 1
	
	local function togglenamebutton()
		istoggled = not istoggled
	
		if istoggled then
			namebutton.BackgroundColor3 = Color3.fromRGB(164, 140, 165)
		else
			namebutton.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
			getgenv().cframespeedtoggle = false
		end
	end
	
	namebutton.MouseButton1Click:Connect(togglenamebutton)
	
	local UserInputService = game:GetService("UserInputService")
	
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end 
	
		if input.KeyCode == Enum.KeyCode[KeyBind:upper()] and not getgenv().flytoggle then
			if istoggled then
				getgenv().cframespeedtoggle = not getgenv().cframespeedtoggle
			end
		end
	end)
	
	for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA("Script") and v.Name ~= "Health" and v.Name ~= "Sound" and v:FindFirstChild("LocalScript") then
			v:Destroy()
		end
	end
	
	game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
		repeat
			wait()
		until game.Players.LocalPlayer.Character
		char.ChildAdded:Connect(function(child)
			if child:IsA("Script") then
				wait(0.1)
				if child:FindFirstChild("LocalScript") then
					child.LocalScript:FireServer()
				end
			end
		end)
	end)
	
	game:GetService("RunService").Heartbeat:Connect(
		function()
			if getgenv().cframespeedtoggle == true then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame +
					game.Players.LocalPlayer.Character.Humanoid.MoveDirection * getgenv().speedvalue / 0.5
			end
		end
	)
	
end;
task.spawn(C_23);
-- StarterGui.MNSGUI.MainNitroFrame.MainFrame.MainBottomLeft.HitBoxToggle.LocalScript
local function C_2b()
local script = NTRO["2b"];
	local button = script.Parent
	local config = button.Parent:FindFirstChild("config")
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	
	-- Ensure child elements exist
	local configFrameBoxes = config and config:FindFirstChild("main")
	local configTxtBoxForBoxSize = configFrameBoxes and configFrameBoxes:FindFirstChild("3hitbox")
	local displayHitboxSize = configFrameBoxes and configFrameBoxes:FindFirstChild("4size")
	local configTxtBoxForBoxColor = configFrameBoxes and configFrameBoxes:FindFirstChild("1color")
	local displayHitboxColor = configFrameBoxes and configFrameBoxes:FindFirstChild("2ctext")
	local configSaveBtn = configFrameBoxes and configFrameBoxes:FindFirstChild("5save")
	
	local isToggled = false
	local hitboxLoop
	local originalHumanoidRootPartSize = Vector3.new(2, 2, 1) -- Default size of HumanoidRootPart (adjust as needed)
	
	-- Notify function for displaying notifications
	local function notify(message, duration)
		duration = duration or 2 -- Default to 2 seconds if not provided
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Notification",
			Text = message,
			Icon = "",
			Duration = duration
		})
	end
	
	-- Initial UI and settings
	button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
	if config then
		config.Visible = false
	end
	
	getgenv().HitboxExpander = false
	getgenv().HitboxSize = 10
	getgenv().HitboxRefreshTime = 0.65
	getgenv().HitboxColor = Color3.fromRGB(192, 163, 193)
	
	-- Converts hex color codes to Color3
	local function hexToColor3(hex)
		hex = hex:gsub("#", "")
		if #hex == 6 then
			local r = tonumber(hex:sub(1, 2), 16)
			local g = tonumber(hex:sub(3, 4), 16)
			local b = tonumber(hex:sub(5, 6), 16)
			return Color3.fromRGB(r, g, b)
		else
			warn("Invalid Hex Code")
			return nil
		end
	end
	
	-- Clears hitbox effects from a player's character
	local function clearHitboxEffects(player)
		if player.Character then
			local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
			if rootPart then
				-- Remove hitbox visual effects
				for _, child in pairs(rootPart:GetChildren()) do
					if child:IsA("BoxHandleAdornment") or child:IsA("SelectionBox") then
						child:Destroy()
					end
				end
				-- Restore original size and collision
				rootPart.CanCollide = true
				rootPart.Size = originalHumanoidRootPartSize
			end
		end
	end
	
	-- Applies hitbox effects to a player's character
	local function applyHitboxEffects(player)
		if player.Character then
			local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
			if rootPart then
				clearHitboxEffects(player) -- Ensure any previous hitboxes are cleared
	
				-- Disable collision and resize root part for hitbox
				rootPart.CanCollide = false
				rootPart.Size = Vector3.new(getgenv().HitboxSize, getgenv().HitboxSize, getgenv().HitboxSize)
	
				-- Create visual hitbox outline
				local outline = Instance.new("BoxHandleAdornment")
				outline.Name = "HitboxOutline"
				outline.Adornee = rootPart
				outline.Size = rootPart.Size
				outline.Color3 = getgenv().HitboxColor
				outline.Transparency = 0.9
				outline.AlwaysOnTop = true
				outline.Parent = rootPart
	
				-- Create forcefield visual effect
				local forcefieldEffect = Instance.new("SelectionBox")
				forcefieldEffect.Name = "ForcefieldEffect"
				forcefieldEffect.Adornee = rootPart
				forcefieldEffect.LineThickness = 0.02
				forcefieldEffect.Color3 = getgenv().HitboxColor
				forcefieldEffect.Transparency = 0.3
				forcefieldEffect.Parent = rootPart
			end
		end
	end
	
	-- Updates settings from the UI and applies them
	local function updateSettings()
		if configTxtBoxForBoxSize and configTxtBoxForBoxColor and displayHitboxSize and displayHitboxColor then
			local boxSizeInput = tonumber(configTxtBoxForBoxSize.Text)
			local boxColorInput = configTxtBoxForBoxColor.Text
	
			if boxSizeInput and boxSizeInput > 0 then
				getgenv().HitboxSize = boxSizeInput
				displayHitboxSize.Text = "Size: " .. tostring(boxSizeInput)
			else
				warn("Invalid Box Size input. Keeping default value: " .. getgenv().HitboxSize)
			end
	
			local newColor = hexToColor3(boxColorInput)
			if newColor then
				getgenv().HitboxColor = newColor
				displayHitboxColor.Text = "Color: " .. boxColorInput
			else
				warn("Invalid Hex Color input. Keeping default color.")
			end
		end
	
		if isToggled then
			for _, player in ipairs(Players:GetPlayers()) do
				if player ~= LocalPlayer then
					clearHitboxEffects(player)
					applyHitboxEffects(player)
				end
			end
		end
	end
	
	-- Starts the hitbox loop
	local function startHitboxLoop()
		hitboxLoop = task.spawn(function()
			while getgenv().HitboxExpander do
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= LocalPlayer then
						applyHitboxEffects(player)
					end
				end
				task.wait(getgenv().HitboxRefreshTime)
			end
		end)
	end
	
	-- Stops the hitbox loop
	local function stopHitboxLoop()
		if hitboxLoop then
			task.cancel(hitboxLoop)
			hitboxLoop = nil
		end
	
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer then
				clearHitboxEffects(player)
			end
		end
	end
	
	-- Toggles the hitbox expander and UI visibility
	local function toggleButton()
		isToggled = not isToggled
		getgenv().HitboxExpander = isToggled
	
		if isToggled then
			print("Hitbox Expander ON")
			button.BackgroundColor3 = Color3.fromRGB(164, 140, 165)
			if config then
				config.Visible = true
			end
	
			startHitboxLoop()
		else
			print("Hitbox Expander OFF")
			button.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
			if config then
				config.Visible = false
			end
	
			stopHitboxLoop()  -- Ensure hitbox loop is stopped
			getgenv().HitboxExpander = false  -- Explicitly turn off the hitbox expander
			-- Clear hitbox effects and reset collision for all players when toggled off
			for _, player in ipairs(Players:GetPlayers()) do
				if player ~= LocalPlayer then
					clearHitboxEffects(player)
				end
			end
		end
	end
	
	-- Connect events
	if configSaveBtn then
		configSaveBtn.MouseButton1Click:Connect(updateSettings)
	else
		warn("Save Button not found!")
	end
	
	button.MouseButton1Click:Connect(toggleButton)
	
end;
task.spawn(C_2b);
-- StarterGui.MNSGUI.MainNitroFrame.LocalScript
local function C_39()
local script = NTRO["39"];
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	local mnsgui = PlayerGui:WaitForChild("MNSGUI")
	local MNF = mnsgui:WaitForChild("MainNitroFrame")
	
	
	
	MNF.Draggable = true
	MNF.Active = true
	
	
end;
task.spawn(C_39);
-- StarterGui.MNSGUI.MainNitroFrame.PlayerlistFrame.PlayerlistLeft.Frame.LocalScript
local function C_48()
local script = NTRO["48"];
	local tplocations = {
		bank = Vector3.new(-480, 23, -285),
		school = Vector3.new(-532, 21, 336),
		hairsalon = Vector3.new(-858, 22, -652),
		gym = Vector3.new(-79, 22, -632),
		hoodkicks = Vector3.new(-240, 21, -413),
		uphill = Vector3.new(481, 47, -572),
		downhill = Vector3.new(-535, 7, -735),
		uphillfood = Vector3.new(588, 51, -480),
		food = Vector3.new(-335, 23, -295),
		revolver = Vector3.new(-635, 21, -131),
		gastation = Vector3.new(592, 48, -257),
		park = Vector3.new(-262, 22, -761),
		mil = Vector3.new(38, 25, -875),
	}
	
	local players = game:GetService("Players")
	local localPlayer = players.LocalPlayer
	local frame = script.Parent
	
	local function onButtonClicked(button)
		local locationName = button.Name:lower() 
	
		if tplocations[locationName] then
			localPlayer.Character:SetPrimaryPartCFrame(CFrame.new(tplocations[locationName]))
		else
			localPlayer:SendNotification({
				Title = "Invalid Location",
				Text = "The location doesn't exist.",
				Duration = 3
			})
		end
	end
	
	local function setupTeleportButtons()
		for _, child in pairs(frame:GetChildren()) do
			if child:IsA("TextButton") or child:IsA("ImageButton") then
				child.MouseButton1Click:Connect(function()
					onButtonClicked(child)
				end)
			end
		end
	end
	
	return setupTeleportButtons()
	
end;
task.spawn(C_48);

return NTRO["1"], require;
